(function (e) {
    e(document).ready(function () {
        function t(e) {
            if (Array.isArray(e)) {
                for (var t = 0, a = Array(e.length); t < e.length; t++) a[t] = e[t];
                return a
            }
            return Array.from(e)
        }
        console.log("子比主题：增强编辑器");
        var a = wp.blocks,
            l = wp.components,
            o = wp.element,
            i = wp.blockEditor ? wp.blockEditor : wp.editor,
            n = wp.richText.registerFormatType,
            c = wp.data,
            s = c.dispatch,
            r = c.select,
            u = s("core/block-editor") ? s("core/block-editor") : s("core/editor"),
            b = r("core/block-editor") ? r("core/block-editor") : r("core/editor"),
            d = b.getBlockOrder,
            p = b.getBlock,
            m = u.insertBlock,
            v = u.removeBlock,
            h = u.updateBlockAttributes,
            g = o.createElement,
            f = a.registerBlockType,
            y = a.createBlock,
            k = i.InnerBlocks,
            N = i.RichTextToolbarButton,
            C = o.Component,
            _ = wp.dom.getRectangleFromRange,
            w = l.Popover,
            z = l.Button,
            x = i.RichText,
            q = i.PlainText,
            j = (i.MediaUploadCheck, i.MediaUpload),
            S = o.Fragment,
            A = i.InspectorControls,
            M = l.PanelBody,
            B = l.ClipboardButton,
            T = l.TextControl,
            F = l.RadioControl,
            V = l.Toolbar,
            H = l.SelectControl,
            L = l.ToggleControl,
            Z = l.RangeControl,
            R = l.DropdownMenu,
            P = i.BlockControls,
            I = i.AlignmentToolbar,
            D = lodash,
            E = D.times,
            O = (D.throttle, D.debounce, {}),
            U = "#1fbc45",
            G = "http://www.w3.org/2000/svg";
        O.zibll = g("svg", {
            width: "16px",
            height: "16px",
            viewBox: "0 0 80 90",
            className: "svg-icon",
            xmlns: G,
            fillRule: "evenodd",
            clipRule: "evenodd",
            strokeLinejoin: "round",
            strokeMiterlimit: "1.414"
        }, g("g", {
            fillRule: "nonzero",
            transform: "scale(0.19785394)"
        }, g("path", {
            d: "m 408.68862,333.8044 0.009,0.59315 0.004,0.29795 c 0.18694,71.91774 -59.58485,130.93907 -134.53126,132.29044 -0.85543,0.0154 -1.71097,0.0231 -2.56654,0.0231 H 21.034693 C 11.007191,467.00905 2.5761396,460.42672 0.14656613,451.50411 L 338.63176,215.013 c 45.60925,25.97569 68.96153,65.57282 70.05686,118.7914 z M 231.25625,0 C 278.01331,0 321.188,23.909861 344.73248,62.682399 L 0,303.53751 V 20.793975 C 0,9.3097796 9.6674353,0 21.592821,0 Z",
            fill: U
        }))), O.video = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M682.666667 405.333333h64v426.666667H256c0-234.666667 192-426.666667 426.666667-426.666667z",
            fill: U
        }), g("path", {
            d: "M704 874.666667H128c-46.933333 0-85.333333-38.4-85.333333-85.333334V234.666667c0-46.933333 38.4-85.333333 85.333333-85.333334h576c46.933333 0 85.333333 38.4 85.333333 85.333334v554.666666c0 46.933333-38.4 85.333333-85.333333 85.333334zM128 213.333333c-12.8 0-21.333333 8.533333-21.333333 21.333334v554.666666c0 12.8 8.533333 21.333333 21.333333 21.333334h576c12.8 0 21.333333-8.533333 21.333333-21.333334V234.666667c0-12.8-8.533333-21.333333-21.333333-21.333334H128z",
            fill: U
        }), g("path", {
            d: "M277.333333 490.666667c-59.733333 0-106.666667-46.933333-106.666666-106.666667s46.933333-106.666667 106.666666-106.666667 106.666667 46.933333 106.666667 106.666667-46.933333 106.666667-106.666667 106.666667z m0-149.333334c-23.466667 0-42.666667 19.2-42.666666 42.666667s19.2 42.666667 42.666666 42.666667 42.666667-19.2 42.666667-42.666667-19.2-42.666667-42.666667-42.666667zM938.666667 800c-8.533333 0-14.933333-2.133333-21.333334-6.4L725.333333 682.666667V341.333333l192-110.933333c10.666667-6.4 21.333333-6.4 32-4.266667 10.666667 2.133333 21.333333 8.533333 25.6 19.2 4.266667 6.4 6.4 14.933333 6.4 21.333334v490.666666c0 23.466667-19.2 42.666667-42.666666 42.666667z m-149.333334-153.6l128 74.666667V302.933333l-128 74.666667v268.8z",
            fill: U
        })), O.iframe = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M885.76 52.053333h-364.8c-47.786667 0-86.186667 38.826667-86.186667 86.186667v82.346667H139.093333c-48.213333 0-87.466667 39.253333-87.466666 87.04v576.426666c0 48.213333 39.253333 87.466667 87.466666 87.466667h576.426667c48.213333 0 87.04-39.253333 87.04-87.466667v-294.826666h82.773333c47.786667 0 86.186667-38.826667 86.186667-86.186667V138.666667c0.426667-47.786667-37.973333-86.613333-85.76-86.613334z m-151.04 832.426667c0 10.666667-8.533333 19.2-19.2 19.2H139.093333c-10.666667 0-19.2-8.533333-19.2-19.2V308.053333c0-10.666667 8.533333-19.2 19.2-19.2h295.253334v214.186667c0 12.373333 2.56 24.32 7.68 34.986667L255.146667 725.333333v-68.693333c0-18.773333-15.36-34.133333-34.133334-34.133333s-34.133333 15.36-34.133333 34.133333v151.04a33.109333 33.109333 0 0 0 9.386667 23.466667c0.426667 0.426667 0.426667 0.426667 0.426666 0.853333 0.426667 0.426667 0.853333 0.426667 1.28 0.853333 2.986667 2.56 5.973333 5.12 9.813334 6.4 4.266667 1.706667 8.533333 2.56 13.226666 2.56h151.04c18.773333 0 34.133333-15.36 34.133334-34.133333s-15.36-34.133333-34.133334-34.133333H303.36l189.013333-189.013334c8.96 2.986667 18.346667 5.12 28.586667 5.12h213.76v294.826667z m168.96-381.013333c0 9.813333-8.106667 17.92-17.92 17.92h-364.8c-9.813333 0-17.92-8.106667-17.92-17.92V138.666667c0-9.813333 8.106667-17.92 17.92-17.92h364.8c9.813333 0 17.92 8.106667 17.92 17.92v364.8z",
            fill: U
        })), O.feature = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M833.176 606.564c37.737-60.688 59.927-131.977 59.927-208.47 0-218.921-178.605-397.021-398.09-397.021-219.534 0-398.178 178.1-398.178 397.021 0 87.873 29.126 168.877 77.787 234.72L30.118 883.48l156.358 11.582L275.333 1024l136.88-237.615c26.767 5.693 54.414 8.782 82.806 8.782 38.717 0 76.062-5.787 111.49-16.139L747.663 1024l88.858-128.938 156.314-11.582-159.659-276.916zM362.37 772.156L271.496 929.8l-57.172-83.017-100.66-7.458 95.25-165.296c0.79 0.832 1.719 1.474 2.509 2.307 9.742 9.86 19.876 19.33 30.555 28.111 2.364 1.917 4.918 3.581 7.283 5.448 8.902 6.966 18.004 13.636 27.45 19.872 3.641 2.401 7.384 4.463 11.07 6.72 9.104 5.542 18.353 10.794 27.9 15.603 3.002 1.57 6.05 2.995 9.154 4.414a397.407 397.407 0 0 0 34.93 14.575c0.885 0.342 1.72 0.782 2.605 1.078z m43.495-39.2a355.38 355.38 0 0 1-51.657-18.007 8.63 8.63 0 0 0-0.79-0.346c-15.4-6.822-30.112-14.916-44.236-23.843-1.62-1.035-3.344-1.967-4.92-2.995-13.377-8.731-26.027-18.592-38.076-29.146a321.702 321.702 0 0 1-7.632-6.916c-11.853-10.988-23.17-22.664-33.55-35.424-48.562-59.66-77.789-135.564-77.789-218.185 0-191.2 156.018-346.781 347.799-346.781 191.737 0 347.704 155.58 347.704 346.781 0 73.108-22.88 140.862-61.749 196.844-8.705 12.509-18.347 24.336-28.633 35.57-2.263 2.503-4.426 5.006-6.74 7.408-11.461 11.826-23.669 22.916-36.655 33.023-1.379 1.078-2.807 2.06-4.185 3.139-28.487 21.441-60.174 38.76-94.022 50.682-1.72 0.587-3.394 1.273-5.115 1.865l-8.611 2.995a347.098 347.098 0 0 1-101.994 15.307c-30.847 0-60.662-4.42-89.149-11.972z m402.807 113.826l-57.17 83.017-96.925-168.19c13.58-5.938 26.711-12.76 39.457-20.167 1.625-0.934 3.198-1.917 4.773-2.895 10.773-6.43 21.154-13.346 31.193-20.703a354.339 354.339 0 0 0 7.971-5.94c8.657-6.67 16.925-13.686 24.992-21.05 3.15-2.843 6.298-5.542 9.345-8.435 7.53-7.313 14.616-15.011 21.507-22.86 2.36-2.654 5.064-5.006 7.327-7.754L909.29 839.324l-100.617 7.458z",
            fill: U
        }), g("path", {
            d: "M654.672 637.872l-30.548-177.414 129.3-125.559-178.65-25.904-79.71-161.369-79.95 161.369-178.693 25.904 129.343 125.56-30.503 177.361 159.753-83.753 159.658 83.805z m-309.915-267.94l103.814-15.016 46.398-93.76 46.347 93.76 103.765 15.017L570 442.889l17.76 103.033-92.74-48.671-92.845 48.721 17.713-103.083-75.13-72.956z",
            fill: U
        })), O.biaoti = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M640 76.8c-25.6 0-51.2 25.6-51.2 51.2v332.8H179.2V128c0-25.6-19.2-51.2-51.2-51.2s-51.2 25.6-51.2 51.2v704c0 25.6 19.2 51.2 51.2 51.2s51.2-19.2 51.2-51.2V563.2h416V832c0 25.6 19.2 51.2 51.2 51.2s51.2-19.2 51.2-51.2V128c-6.4-25.6-32-51.2-57.6-51.2zM915.2 358.4c-19.2-6.4-38.4 0-51.2 12.8l-102.4 108.8c-19.2 19.2-19.2 51.2 0 70.4 19.2 19.2 51.2 19.2 70.4 0l19.2-19.2v326.4c0 25.6 19.2 51.2 51.2 51.2s51.2-19.2 51.2-51.2v-448c-6.4-25.6-19.2-38.4-38.4-51.2z",
            fill: U
        })), O.postsbox = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M544.256 887.97866668c-9.728 0-19.456-2.56-28.16-8.192-16.896-10.24-27.136-28.16-26.624-48.128V269.99466668c0-24.576 13.824-47.616 35.84-58.368 117.76-60.416 260.608-90.112 423.936-87.04 35.84 1.024 65.024 30.208 65.024 66.048V731.30666668c0 33.792-25.088 61.44-58.88 65.024l-20.992 2.56c-141.312 15.36-263.168 29.184-364.032 82.944-8.192 4.096-17.408 6.144-26.112 6.144zM928.768 175.78666668c-146.432 0-274.432 27.648-380.416 81.92-4.608 2.56-7.68 7.168-7.68 12.8v562.688c0 1.536 0.512 2.56 2.048 3.584s2.56 0.512 3.072 0h0.512c109.568-58.368 236.032-72.192 382.976-88.576l20.992-2.56c7.68-0.512 13.312-6.656 13.312-13.824V190.63466668c0-8.192-6.656-14.848-14.848-14.848h-19.968z",
            fill: U
        }), g("path", {
            d: "M487.424 889.51466668c-8.704 0-17.408-2.048-25.6-6.656C358.4 827.05066668 232.448 813.73866668 87.04 797.86666668l-13.312-1.536c-33.28-3.072-58.368-30.72-58.368-64.512V191.14666668c0-35.328 29.184-65.024 65.024-66.048 163.84-2.56 306.688 26.624 424.448 87.552 21.504 10.752 35.328 33.792 35.328 57.856V836.26666668c0 18.944-9.728 36.352-26.112 46.08-8.192 4.608-17.408 7.168-26.624 7.168z m-386.56-713.216H81.408c-8.192 0-14.848 6.656-14.848 14.848v540.672c0 7.168 5.632 13.312 12.8 13.824l13.312 1.536c151.04 15.872 281.088 30.208 393.728 90.624h0.512c0.512 0.512 1.024 0.512 1.536 0s1.024-1.024 1.024-1.536V270.50666668c0-5.12-3.072-10.24-7.168-12.288-106.496-54.784-234.496-81.92-381.44-81.92z",
            fill: U
        }), g("path", {
            d: "M386.56 416.93866668c-3.072 0-6.656-0.512-9.728-2.048-67.584-27.136-136.704-40.96-204.288-40.96-14.336 0-25.6-11.264-25.6-25.6s11.264-25.6 25.6-25.6c74.24 0 149.504 14.848 223.744 45.056 13.312 5.12 19.456 19.968 14.336 33.28-4.096 9.728-13.824 15.872-24.064 15.872z m0 171.52c-3.072 0-6.656-0.512-9.728-2.048-67.584-27.136-136.704-40.96-204.288-40.96-14.336 0-25.6-11.264-25.6-25.6s11.264-25.6 25.6-25.6c74.24 0 149.504 14.848 223.744 45.056 13.312 5.12 19.456 19.968 14.336 33.28-4.096 9.728-13.824 15.872-24.064 15.872z m256.512-171.52c-10.24 0-19.968-6.144-23.552-15.872-5.12-13.312 1.024-28.16 14.336-33.28 73.728-29.696 148.992-45.056 223.744-45.056 14.336 0 25.6 11.264 25.6 25.6s-11.264 25.6-25.6 25.6c-68.096 0-136.704 13.824-204.288 40.96-3.584 1.536-7.168 2.048-10.24 2.048z m0 171.52c-10.24 0-19.968-6.144-23.552-15.872-5.12-13.312 1.024-28.16 14.336-33.28 73.728-29.696 148.992-45.056 223.744-45.056 14.336 0 25.6 11.264 25.6 25.6s-11.264 25.6-25.6 25.6c-68.096 0-136.704 13.824-204.288 40.96-3.584 1.536-7.168 2.048-10.24 2.048z",
            fill: U
        })), O.enlighter = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M512 0a512 512 0 1 1 0 1024A512 512 0 0 1 512 0z m0 73.142857a438.857143 438.857143 0 1 0 0 877.714286A438.857143 438.857143 0 0 0 512 73.142857z m50.834286 150.674286a36.571429 36.571429 0 0 1 29.622857 42.422857l-88.868572 504.246857a36.571429 36.571429 0 0 1-72.045714-12.726857l88.868572-504.246857a36.571429 36.571429 0 0 1 42.422857-29.622857zM341.430857 382.317714a36.571429 36.571429 0 0 1 0 51.785143l-77.531428 77.531429 77.531428 77.531428a36.571429 36.571429 0 0 1-51.712 51.785143L186.221714 537.453714a36.571429 36.571429 0 0 1 0-51.712l103.497143-103.497143a36.571429 36.571429 0 0 1 51.712 0z m388.827429-4.169143l5.12 4.169143 103.424 103.497143a36.571429 36.571429 0 0 1 4.242285 46.665143l-4.242285 5.046857-103.424 103.424a36.571429 36.571429 0 0 1-55.954286-46.665143l4.169143-5.12 77.604571-77.531428-77.531428-77.531429a36.571429 36.571429 0 0 1 46.592-55.954286z",
            fill: U
        })), O.buttons = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M769 468.7c5.5-22.1 11.1-49.7 11.1-77.4 0-44.2-11.1-88.4-27.6-127.1-16.6-38.7-38.7-71.9-71.9-105-27.6-27.6-60.8-49.7-99.5-66.3-38.7-16.6-82.9-27.7-127.1-27.7s-88.4 11.1-127.1 27.6-77.4 38.7-105 71.9c-27.6 27.6-55.3 66.3-71.9 105s-22.1 77.4-22.1 127.1c0 38.7 5.5 71.9 16.6 105 11.1 33.2 27.6 60.8 49.7 88.4s44.2 49.7 77.4 71.9c27.6 22.1 60.8 33.2 94 44.2V584.8c-38.7-16.6-66.3-44.2-88.4-77.4-22.1-33.2-33.2-71.9-33.2-110.6 0-27.6 5.5-55.3 16.6-82.9s27.6-49.7 44.2-66.3c16.6-22.1 38.7-33.2 66.3-44.2 27.6-11.1 55.3-16.6 82.9-16.6s55.3 5.5 82.9 16.6c22.1 11.1 44.2 22.1 60.8 44.2 16.6 16.6 33.2 38.7 44.2 66.3 11.1 27.6 16.6 55.3 16.6 82.9v5.5c0 0.1 110.5 66.4 110.5 66.4z",
            fill: U
        }), g("path", {
            d: "M426.3 866.7c11.1-16.6 27.6-33.2 44.2-49.7 11.1-11.1 27.6-27.6 49.7-44.2 16.6-16.6 38.7-27.6 60.8-44.2L669.5 922c11.1 16.6 22.1 27.6 44.2 33.2 16.6 5.5 38.7 5.5 55.3-5.5 16.6-11.1 27.6-22.1 33.2-44.2 5.5-16.6 5.5-38.7-5.5-55.3L686.1 684.3c27.6-5.5 49.7-11.1 77.4-16.6 27.6-5.5 49.7-5.5 66.3-5.5h66.3L420.8 291.8l5.5 574.9z",
            fill: U
        })), O.tabs = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M420.608 489.984a15.104 15.104 0 0 1 4.864 11.776 14.848 14.848 0 0 1-4.864 11.776 17.664 17.664 0 0 1-12.288 4.352h-44.288V665.6a15.104 15.104 0 0 1-5.376 12.032 18.176 18.176 0 0 1-13.056 5.12 17.664 17.664 0 0 1-13.056-5.12 15.872 15.872 0 0 1-5.12-12.032v-147.712h-44.032a16.64 16.64 0 0 1-12.288-4.608 14.848 14.848 0 0 1-4.864-11.776 14.848 14.848 0 0 1 4.864-11.52 17.152 17.152 0 0 1 12.288-4.352H409.6a16.384 16.384 0 0 1 11.008 4.352zM557.824 534.016a15.872 15.872 0 0 1 4.864 12.288V665.6a15.616 15.616 0 0 1-4.864 12.032 15.872 15.872 0 0 1-12.032 5.12 16.64 16.64 0 0 1-12.032-4.864 17.664 17.664 0 0 1-4.864-12.032 61.952 61.952 0 0 1-44.032 19.712 64.512 64.512 0 0 1-35.328-9.984 69.376 69.376 0 0 1-25.6-27.904 92.16 92.16 0 0 1 0-80.384 67.072 67.072 0 0 1 25.6-27.904 61.696 61.696 0 0 1 34.304-9.984 66.816 66.816 0 0 1 45.312 17.408 16.64 16.64 0 0 1 4.864-12.288 17.408 17.408 0 0 1 24.064 0zM518.912 640a55.04 55.04 0 0 0 0-67.328 36.864 36.864 0 0 0-29.952-13.568 36.352 36.352 0 0 0-29.44 13.568 51.2 51.2 0 0 0-11.52 33.536 51.2 51.2 0 0 0 11.264 33.792 37.632 37.632 0 0 0 29.696 13.312 38.4 38.4 0 0 0 29.952-13.312zM712.448 539.136a70.4 70.4 0 0 1 25.6 27.648 86.016 86.016 0 0 1 9.216 40.192 87.04 87.04 0 0 1-9.216 40.448 68.608 68.608 0 0 1-25.6 27.904 61.696 61.696 0 0 1-34.304 9.984 57.6 57.6 0 0 1-25.6-5.632 61.952 61.952 0 0 1-19.712-13.312v1.792a16.64 16.64 0 0 1-16.896 17.152 15.616 15.616 0 0 1-12.032-4.864 16.128 16.128 0 0 1-4.864-12.288v-176.64a16.64 16.64 0 0 1 4.864-12.288 17.408 17.408 0 0 1 24.064 0 16.64 16.64 0 0 1 4.864 12.288v58.624a55.296 55.296 0 0 1 18.688-14.592 53.248 53.248 0 0 1 25.6-6.4 64.512 64.512 0 0 1 35.328 9.984z m-9.984 102.4a51.2 51.2 0 0 0 11.52-33.792 51.2 51.2 0 0 0-11.264-33.536 40.192 40.192 0 0 0-59.648 0 55.04 55.04 0 0 0 0 67.328 37.632 37.632 0 0 0 29.952 13.568 37.12 37.12 0 0 0 29.44-15.104zM857.088 337.408V281.6a76.8 76.8 0 0 0-76.8-76.8H402.176a76.8 76.8 0 0 0-57.088-25.6H206.336a76.8 76.8 0 0 0-76.8 76.8v512a76.8 76.8 0 0 0 76.8 76.8h622.592a76.8 76.8 0 0 0 76.8-76.8V409.6a76.8 76.8 0 0 0-48.64-72.192z m-51.2-56.576v51.2h-153.6V281.6a76.8 76.8 0 0 0-4.608-25.6h132.608a25.6 25.6 0 0 1 25.6 25.6z m-230.4-25.6a25.6 25.6 0 0 1 25.6 25.6v51.2h-179.2V256z m279.04 512a25.6 25.6 0 0 1-25.6 25.6H206.336a25.6 25.6 0 0 1-25.6-25.6V256a25.6 25.6 0 0 1 25.6-25.6h138.752a25.6 25.6 0 0 1 25.6 25.6v102.4a25.6 25.6 0 0 0 25.6 25.6h432.64a25.6 25.6 0 0 1 25.6 25.6z",
            fill: U
        })), O.featured = g("svg", {
            viewBox: "0 0 1024 1024",
            className: "svg-icon",
            xmlns: G
        }, g("path", {
            d: "M923.36 854.72c37.92 0 68.64 30.72 68.64 68.64S961.28 992 923.36 992H512C248 992 32 776 32 512S248 32 512 32s480 216 480 480c0 133.92-54.72 257.28-144 342.72h75.36zM512 820.64c58.08 0 102.72-44.64 102.72-102.72S570.08 615.2 512 615.2s-102.72 44.64-102.72 102.72S453.92 820.64 512 820.64zM306.08 409.28c-58.08 0-102.72 44.64-102.72 102.72S248 614.72 306.08 614.72 408.8 570.08 408.8 512s-44.16-102.72-102.72-102.72zM512 203.36c-58.08 0-102.72 44.64-102.72 102.72S453.92 408.8 512 408.8s102.72-44.64 102.72-102.72S570.08 203.36 512 203.36z m205.92 205.92c-58.08 0-102.72 44.64-102.72 102.72s44.64 102.72 102.72 102.72S820.64 570.08 820.64 512 776 409.28 717.92 409.28z",
            fill: U
        }));
        var $ = [{
                color: "#fb2121"
            }, {
                color: "#ef0c7e"
            }, {
                color: "#F3AC07"
            }, {
                color: "#8CA803"
            }, {
                color: "#64BD05"
            }, {
                color: "#11C33F"
            }, {
                color: "#08B89A"
            }, {
                color: "#09ACE2"
            }, {
                color: "#1F91F3"
            }, {
                color: "#3B6ED5"
            }, {
                color: "#664FFA"
            }, {
                color: "#A845F7"
            }, {
                color: "#333"
            }, {
                color: "#666"
            }, {
                color: "#999"
            }, {
                color: "#f8f8f8"
            }],
            J = function (e, t) {
                return t = t || "查看官方教程", e = -1 != e.indexOf("http") ? e : "https://www.zibll.com/?s=" + e, g("div", {
                    className: "padding-15"
                }, g("a", {
                    className: "but jb-green em09",
                    href: e,
                    target: "blank"
                }, t))
            },
            Q = function (e, t, a, l) {
                e = e || "info", wp.data.dispatch("core/notices").createNotice(e, t, a)
            };
        f("zibllblock/tabs", {
            title: "Zibll:Tab栏目",
            icon: O.tabs,
            supports: {
                className: !1,
                anchor: !0
            },
            description: "在文章中添加多栏目的Tab",
            category: "zibll_block_cat",
            attributes: {
                tabHeaders: {
                    type: "array",
                    default: ["栏目 1", "栏目 2", "栏目 3"]
                },
                tabActive: {
                    type: "number",
                    default: 0
                },
                open: {
                    type: "number",
                    default: 0
                },
                layout: {
                    type: "string",
                    default: "nav-top"
                }
            },
            edit: function (e, a) {
                var l = e.attributes,
                    o = e.isSelected,
                    i = e.setAttributes,
                    n = l.tabHeaders,
                    c = l.tabActive,
                    s = (l.open, l.layout),
                    r = e.clientId,
                    u = function (e) {
                        return g("div", {
                            className: "tab-header-item" + (e == c ? " active" : ""),
                            onClick: function () {
                                b(e)
                            }
                        }, g(x, {
                            tagName: "p",
                            className: "tab-header-input",
                            onChange: function (a) {
                                n[e] = a, i({
                                    tabHeaders: t(n)
                                })
                            },
                            value: n[e],
                            placeholder: "输入标题..."
                        }), g("div", {
                            className: "tab-operation"
                        }, g("a", {
                            className: "but b-red circular",
                            onClick: function () {
                                N(e)
                            }
                        }, g("i", {
                            className: "fa fa-times"
                        }))))
                    },
                    b = function (e) {
                        var t = p(r);
                        i({
                            tabActive: e
                        }), E(t.innerBlocks.length, function (a) {
                            h(t.innerBlocks[a].clientId, {
                                tabActive: e,
                                id: a
                            })
                        })
                    },
                    f = function () {
                        var e = y("zibllblock/tab");
                        m(e, n.length, r), i({
                            tabHeaders: [].concat(t(n), "")
                        }), b(n.length)
                    },
                    N = function (e) {
                        if (n.length < 2) return Q("warning", "不能再删除！至少保留一个栏目");
                        var a = d(r);
                        return v(a[e], !1), n.splice(e, 1), i({
                            tabHeaders: t(n)
                        }), b(0), !1
                    };
                return g("div", {
                    className: "tab-card theme-card-box " + s
                }, g("div", {
                    className: "tab-header flex ab"
                }, n.map(function (e, t) {
                    return u(t)
                }), [o && g("a", {
                    className: "but jb-blue em09 ml6",
                    onClick: f
                }, "+ 添加")]), g("div", {
                    className: "tab-content"
                }, g(k, {
                    template: [
                        ["zibllblock/tab", {
                            id: 0
                        }],
                        ["zibllblock/tab", {
                            id: 1
                        }],
                        ["zibllblock/tab", {
                            id: 2
                        }]
                    ],
                    templateLock: !1,
                    allowedBlocks: ["zibllblock/tab"]
                })), g(A, null, J("TAB栏目"), g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g("div", {
                    className: "components-base-control"
                }, g(H, {
                    label: "导航栏位置",
                    value: s,
                    onChange: function (e) {
                        i({
                            layout: e
                        })
                    },
                    options: [{
                        label: "顶部",
                        value: "nav-top"
                    }, {
                        label: "左侧",
                        value: "nav-left"
                    }, {
                        label: "右侧",
                        value: "nav-left nav-right"
                    }]
                })))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.tabHeaders,
                    l = t.open,
                    o = t.layout,
                    i = function (e) {
                        return g("li", {
                            className: e == l ? "active" : ""
                        }, g("a", {
                            className: "post-tab-toggle",
                            href: "javascript:;",
                            "tab-id": e
                        }, a[e] || "栏目" + (e + 1)))
                    };
                return g("div", {
                    className: "mb20 post-tab " + o
                }, g("div", {
                    className: "list-inline scroll-x mini-scrollbar tab-nav-theme"
                }, a.map(function (e, t) {
                    return i(t)
                })), g("div", {
                    className: "tab-content"
                }, g(k.Content, null)))
            }
        }), f("zibllblock/tab", {
            title: "Zibll:Tab栏目",
            parent: ["zibllblock/tab"],
            icon: O.tabs,
            supports: {
                className: !1,
                reusable: !1
            },
            category: "zibll_block_cat",
            attributes: {
                id: {
                    type: "number",
                    default: 0
                },
                pid: {
                    type: "string"
                },
                tabActive: {
                    type: "number",
                    default: 0
                },
                open: {
                    type: "number",
                    default: 0
                }
            },
            edit: function (e) {
                var t = e.attributes,
                    a = (e.isSelected, e.setAttributes, t.id),
                    l = t.tabActive;
                t.pid;
                return g(S, null, g("div", {
                    className: "",
                    style: {
                        display: a === l ? "block" : "none"
                    }
                }, g(k, {
                    template: [
                        ["core/paragraph"]
                    ],
                    templateLock: !1
                })))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.id,
                    l = t.open;
                return g("div", {
                    className: "tab-pane fade" + (a == l ? " active in" : ""),
                    "tab-id": a
                }, g(k.Content, null))
            }
        }), f("zibllblock/dplayerfeatured", {
            title: "Zibll:视频剧集",
            icon: O.featured,
            supports: {
                className: !1,
                color: !1
            },
            description: "在文章中插入多剧集的视频，支持本地视频以及m3u8、mpd、flv等流媒体格式",
            category: "zibll_block_cat",
            attributes: {
                featured: {
                    type: "array",
                    source: "query",
                    selector: ".switch-video",
                    default: [{
                        text: "",
                        url: "",
                        media_id: ""
                    }, {
                        text: "",
                        url: "",
                        media_id: ""
                    }],
                    query: {
                        text: {
                            type: "string",
                            source: "attribute",
                            attribute: "title"
                        },
                        url: {
                            type: "string",
                            source: "attribute",
                            attribute: "video-url"
                        },
                        media_id: {
                            type: "number",
                            source: "attribute",
                            attribute: "media-id"
                        }
                    }
                },
                pic: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "video-pic",
                    default: ""
                },
                loop: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-loop",
                    default: ""
                },
                autoplay: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-autoplay",
                    default: ""
                },
                volume: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-volume",
                    default: 1
                },
                height: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-scale-height",
                    default: 0
                },
                hide_controller: {
                    type: "boolean",
                    default: !1
                }
            },
            transforms: {
                to: [{
                    type: "block",
                    blocks: ["zibllblock/dplayer"],
                    transform: function (e) {
                        var t = {
                            url: e.featured[0].url,
                            media_id: e.featured[0].media_id,
                            pic: e.pic,
                            loop: e.loop,
                            autoplay: e.autoplay,
                            volume: e.volume,
                            hide_controller: e.hide_controller
                        };
                        return y("zibllblock/dplayer", t)
                    }
                }]
            },
            edit: function (e) {
                var a = e.attributes,
                    l = e.isSelected,
                    o = e.setAttributes,
                    i = a.featured,
                    n = a.pic,
                    c = a.loop,
                    s = a.autoplay,
                    r = a.hide_controller,
                    u = a.height || 0,
                    b = a.volume || 1,
                    d = function (e, a) {
                        return g("div", {
                            className: "flex featured-item"
                        }, g("span", {
                            className: "mr10 c-red"
                        }, e + 1), g("div", {
                            className: "flex1"
                        }, g("div", {
                            className: "flex ab"
                        }, g(T, {
                            className: "flex1 mr6",
                            tagName: "input",
                            onChange: function (a) {
                                i[e].text = a, o({
                                    featured: t(i)
                                })
                            },
                            value: i[e].text,
                            placeholder: "请输入剧集标题，默认为：第" + (e + 1) + "集"
                        }), [i.length > 2 && g(z, {
                            className: "but c-red but-icon",
                            onClick: function () {
                                m(e)
                            }
                        }, g("i", {
                            className: "fa fa-times"
                        }))]), g("div", {
                            className: "flex ab"
                        }, g(T, {
                            className: "flex1 mr6",
                            tagName: "input",
                            onChange: function (a) {
                                i[e].url = a, i[e].media_id = "", o({
                                    featured: t(i)
                                })
                            },
                            value: i[e].url,
                            placeholder: "输入视频地址或选择、上传本地视频"
                        }), g(j, {
                            title: "选择或上传视频",
                            allowedTypes: ["video"],
                            onSelect: function (a) {
                                i[e].url = a.url, i[e].media_id = a.id, o({
                                    featured: t(i)
                                })
                            },
                            value: i[e].media_id,
                            render: function (e) {
                                var t = e.open;
                                return g("a", {
                                    className: "but c-blue is-secondary flex0",
                                    onClick: t
                                }, "本地视频")
                            }
                        }))))
                    },
                    p = function () {
                        let e = {
                            url: "",
                            media_id: ""
                        };
                        o({
                            featured: [].concat(t(i), e)
                        })
                    },
                    m = function (e) {
                        if (i.length < 3) return Q("warning", "不能再删除！至少保留两个剧集");
                        i.splice(e, 1), o({
                            featured: t(i)
                        })
                    };
                return g("div", {}, g("div", {
                    className: "theme-card-box"
                }, g("div", {
                    className: "em12 mb10 flex ac"
                }, O.featured, g("span", {
                    className: "ml10"
                }, "Zibll剧集视频模块")), g("div", {
                    className: "opacity8 mb10 em09"
                }, "在文章中插入多剧集的视频，支持本地视频以及m3u8、mpd、flv等流媒体格式，如果仅需单个视频请使用“Zibll视频”模块"), [l ? i.map(function (e, t) {
                    return d(t)
                }) : i.map(function (e, t) {
                    return g("div", {
                        className: "flex featured-item px12 opacity8",
                        style: {
                            padding: "2px 10px",
                            "margin-bottom": "-1px"
                        }
                    }, t + 1 + "：" + e.url)
                })], [l && g("a", {
                    className: "but jb-blue",
                    onClick: p
                }, "添加剧集")]), g(A, null, J("剧集视频"), g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g("div", {
                    className: "components-base-control"
                }, [n && g("div", {
                    className: " "
                }, g("img", {
                    src: n
                }))], g(j, {
                    title: "选择或上传视频海报图像",
                    allowedTypes: ["image"],
                    onSelect: function (e) {
                        o({
                            pic: e.url
                        })
                    },
                    render: function (e) {
                        var t = e.open;
                        return g("a", {
                            className: "but jb-blue",
                            onClick: t
                        }, (n ? "替换" : "添加") + "海报图像")
                    }
                })), g(L, {
                    label: "自动播放",
                    checked: s,
                    onChange: function (e) {
                        o({
                            autoplay: e
                        })
                    }
                }), g(L, {
                    label: "循环播放",
                    checked: c,
                    onChange: function (e) {
                        o({
                            loop: e
                        })
                    }
                }), g(L, {
                    label: "隐藏进度条及播放控件",
                    checked: r,
                    onChange: function (e) {
                        o({
                            hide_controller: e
                        })
                    }
                }), g(Z, {
                    label: "初始音量",
                    value: ~~(100 * b),
                    onChange: function (e) {
                        o({
                            volume: e / 100
                        })
                    },
                    allowReset: !0,
                    min: "0",
                    max: "100"
                }), g(Z, {
                    label: "固定长宽比例",
                    help: u > 0 ? "高度为宽度的" + u + "%" : "为0则为不固定，长宽比例自动与视频比例同步",
                    value: ~~u,
                    onChange: function (e) {
                        o({
                            height: e
                        })
                    },
                    allowReset: !0,
                    min: "0",
                    step: "5",
                    max: "200"
                }))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.pic,
                    l = t.loop || "",
                    o = t.autoplay || "",
                    i = t.hide_controller || "",
                    n = t.height || 0,
                    c = t.featured,
                    s = t.volume || 1;
                if (c && c[0]) {
                    var r = c[0].url,
                        u = g("div", {
                            className: "graphic",
                            style: {
                                "padding-bottom": "50%"
                            }
                        }, g("div", {
                            className: "abs-center text-center"
                        }, g("i", {
                            className: "fa fa-play-circle fa-4x muted-3-color opacity5"
                        }))),
                        b = {
                            className: "new-dplayer" + (i ? " controller-hide" : "") + (n > 0 ? " dplayer-scale-height" : ""),
                            "video-url": r,
                            "video-pic": a,
                            "data-loop": l,
                            "data-autoplay": o,
                            "data-volume": s
                        };
                    return n > 0 && (b.style = "--scale-height:" + n + "%;", b["data-scale-height"] = n), g("div", {
                        className: "mb20"
                    }, g("div", b, u), g("div", {
                        className: "featured-video-episode mt10 dplayer-featured"
                    }, c.map(function (e, t) {
                        t += 1;
                        var a = e.text || "第" + t + "集";
                        return g("a", {
                            className: "switch-video text-ellipsis" + (1 == t ? " active" : ""),
                            "data-index": t,
                            "video-url": e.url,
                            "media-id": e.media_id,
                            title: e.text,
                            href: "javascript:;"
                        }, g("span", {
                            className: "mr6 badg badg-sm"
                        }, t), g("i", {
                            className: "episode-active-icon"
                        }, ""), a)
                    })))
                }
            }
        }), f("zibllblock/iframe", {
            title: "Zibll:超级嵌入",
            icon: O.iframe,
            description: "在文章中嵌入其他在线内容，通常用于嵌入其它网站的视频播放器或音乐播放器，也可以嵌入其它任意在线内容",
            category: "zibll_block_cat",
            attributes: {
                url: {
                    source: "attribute",
                    selector: "iframe",
                    attribute: "src"
                },
                aspect: {
                    type: "attribute",
                    selector: "iframe",
                    attribute: "data-aspect"
                },
                allowfullscreen: {
                    type: "attribute",
                    selector: "iframe",
                    attribute: "allowfullscreen"
                }
            },
            edit: function (t) {
                var a = t.attributes,
                    l = t.isSelected,
                    o = t.setAttributes,
                    i = a.url,
                    n = a.allowfullscreen,
                    c = a.aspect || "56%";
                return g("div", {
                    className: "zibllblock-iframe"
                }, g("div", {
                    className: !i || l ? "theme-card-box" : "nois_selected"
                }, [i && g("div", {
                    className: "zibllblock-iframe-div",
                    style: {
                        "padding-bottom": c
                    }
                }, g("iframe", {
                    className: "",
                    width: "100%",
                    src: i
                }), g("div", {
                    className: "iframe-mask"
                }))], [!i && g("div", {
                    className: "components-placeholder__label",
                    style: {
                        width: "95%",
                        height: "27px",
                        "font-size": "15px"
                    }
                }, O.iframe, "嵌入在线内容")], [(!i || l) && g("div", {
                    className: "mt20"
                }, g("div", {
                    className: "iframe-label"
                }, "请输入需要嵌入的链接，或者直接粘贴iframe嵌入代码以自动提取链接"), g("a", {
                    className: "block-editor-block-card__description"
                }, ""))], [(!i || l) && g(T, {
                    style: {
                        width: "95%"
                    },
                    tagName: "input",
                    onChange: function (t) {
                        var a = e.parseHTML(t),
                            l = e(a).attr("src") || t;
                        o({
                            url: l
                        })
                    },
                    value: i,
                    placeholder: "请输入链接或粘贴嵌入代码"
                })]), g(A, null, J("超级嵌入"), g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g(H, {
                    label: "长宽比例设置",
                    value: c,
                    onChange: function (e) {
                        o({
                            aspect: e
                        })
                    },
                    options: [{
                        label: "横版-4:1",
                        value: "25%"
                    }, {
                        label: "横版-3:1",
                        value: "33%"
                    }, {
                        label: "横版-5:2",
                        value: "40%"
                    }, {
                        label: "横版-2:1",
                        value: "50%"
                    }, {
                        label: "横版-16:9",
                        value: "56%"
                    }, {
                        label: "横版-5:3",
                        value: "60%"
                    }, {
                        label: "横版-4:3",
                        value: "75%"
                    }, {
                        label: "横版-5:4",
                        value: "80%"
                    }, {
                        label: "横版-8:7",
                        value: "87.5%"
                    }, {
                        label: "正方形-1:1",
                        value: "100%"
                    }, {
                        label: "竖版-7:8",
                        value: "114%"
                    }, {
                        label: "竖版-4:5",
                        value: "125%"
                    }, {
                        label: "竖版-3:4",
                        value: "133%"
                    }, {
                        label: "竖版-3:5",
                        value: "166%"
                    }, {
                        label: "竖版-1:2",
                        value: "200%"
                    }, {
                        label: "竖版-2:5",
                        value: "250%"
                    }, {
                        label: "竖版-1:3",
                        value: "300%"
                    }]
                }), g(L, {
                    label: "允许内容全屏",
                    checked: !!n,
                    onChange: function (e) {
                        o({
                            allowfullscreen: e
                        })
                    }
                }))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.url,
                    l = (t.allowfullscreen, t.aspect || "56%"),
                    o = {
                        className: "",
                        "data-aspect": l,
                        framespacing: "0",
                        border: "0",
                        width: "100%",
                        frameborder: "no",
                        src: a
                    };
                if (t.allowfullscreen && (o.allowfullscreen = "allowfullscreen"), a) return g("div", {
                    className: "wp-block-embed is-type-video mb20"
                }, g("div", {
                    className: "",
                    style: {
                        "padding-bottom": l
                    }
                }, g("iframe", o)))
            }
        }), f("zibllblock/dplayer", {
            title: "Zibll:视频",
            icon: O.video,
            description: "在文章中插入视频，支持本地视频以及m3u8、mpd、flv等流媒体格式",
            category: "zibll_block_cat",
            attributes: {
                url: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "video-url"
                },
                media_id: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "media-id"
                },
                pic: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "video-pic"
                },
                loop: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-loop"
                },
                autoplay: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-autoplay"
                },
                volume: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-volume"
                },
                height: {
                    type: "string",
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-scale-height",
                    default: 0
                },
                hide_controller: {
                    source: "attribute",
                    selector: ".new-dplayer",
                    attribute: "data-hide"
                }
            },
            transforms: {
                to: [{
                    type: "block",
                    blocks: ["zibllblock/dplayerfeatured"],
                    transform: function (e) {
                        var t = {
                            featured: [{
                                text: "",
                                url: e.url,
                                media_id: e.media_id
                            }, {
                                text: "",
                                url: "",
                                media_id: ""
                            }],
                            pic: e.pic,
                            loop: e.loop,
                            autoplay: e.autoplay,
                            volume: e.volume,
                            hide_controller: e.hide_controller
                        };
                        return y("zibllblock/dplayerfeatured", t)
                    }
                }]
            },
            edit: function (e) {
                var t = e.attributes,
                    a = e.isSelected,
                    l = e.setAttributes,
                    o = t.url,
                    i = t.media_id,
                    n = t.pic,
                    c = t.loop,
                    s = t.autoplay,
                    r = t.hide_controller,
                    u = t.height || 0,
                    b = t.volume || 1;
                return g("div", {}, g("div", {
                    className: "theme-card-box"
                }, g("div", {
                    className: "em12 mb10 flex ac"
                }, O.video, g("span", {
                    className: "ml10"
                }, "Zibll视频模块")), g("div", {
                    className: "opacity8 mb10 em09"
                }, "支持本地视频以及m3u8、mpd、flv等流媒体格式，如需插入多剧集的视频请使用“Zibll剧集视频”模块"), g(T, {
                    style: {
                        width: "95%"
                    },
                    tagName: "input",
                    onChange: function (e) {
                        l({
                            url: e,
                            media_id: ""
                        })
                    },
                    value: o,
                    placeholder: "输入视频地址或选择、上传本地视频"
                }), g(j, {
                    title: "选择或上传视频",
                    allowedTypes: ["video"],
                    onSelect: function (e) {
                        l({
                            url: e.url,
                            media_id: e.id
                        })
                    },
                    value: i,
                    render: function (e) {
                        var t = e.open;
                        return a && g("a", {
                            className: "but jb-blue",
                            onClick: t
                        }, "选择本地视频")
                    }
                })), g(A, null, J("视频教程"), g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g("div", {
                    className: "components-base-control"
                }, [n && g("div", {
                    className: " "
                }, g("img", {
                    src: n
                }))], g(j, {
                    title: "选择或上传视频海报图像",
                    allowedTypes: ["image"],
                    onSelect: function (e) {
                        l({
                            pic: e.url
                        })
                    },
                    render: function (e) {
                        var t = e.open;
                        return g(z, {
                            className: "but jb-blue is-secondary",
                            onClick: t
                        }, (n ? "替换" : "添加") + "海报图像")
                    }
                })), g(L, {
                    label: "自动播放",
                    checked: s,
                    onChange: function (e) {
                        l({
                            autoplay: e
                        })
                    }
                }), g(L, {
                    label: "循环播放",
                    checked: c,
                    onChange: function (e) {
                        l({
                            loop: e
                        })
                    }
                }), g(L, {
                    label: "隐藏进度条及播放控件",
                    checked: r,
                    onChange: function (e) {
                        l({
                            hide_controller: e
                        })
                    }
                }), g(Z, {
                    label: "初始音量",
                    value: ~~(100 * b),
                    onChange: function (e) {
                        l({
                            volume: e / 100
                        })
                    },
                    allowReset: !0,
                    min: "0",
                    max: "100"
                }), g(Z, {
                    label: "固定长宽比例",
                    help: u > 0 ? "高度为宽度的" + u + "%" : "为0则为不固定，长宽比例自动与视频比例同步",
                    value: ~~u,
                    onChange: function (e) {
                        l({
                            height: e
                        })
                    },
                    allowReset: !0,
                    min: "0",
                    step: "5",
                    max: "200"
                }))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.url,
                    l = t.media_id,
                    o = t.pic,
                    i = t.loop || "",
                    n = t.autoplay || "",
                    c = t.hide_controller || "",
                    s = t.height || 0,
                    r = t.volume || 1;
                if (a) {
                    var u = g("div", {
                            className: "graphic",
                            style: {
                                "padding-bottom": "50%"
                            }
                        }, g("div", {
                            className: "abs-center text-center"
                        }, g("i", {
                            className: "fa fa-play-circle fa-4x muted-3-color opacity5"
                        }))),
                        b = {
                            className: "new-dplayer post-dplayer" + (c ? " controller-hide" : "") + (s > 0 ? " dplayer-scale-height" : ""),
                            "video-url": a,
                            "media-id": l,
                            "video-pic": o,
                            "data-loop": i,
                            "data-hide": c,
                            "data-autoplay": n,
                            "data-volume": r
                        };
                    return s > 0 && (b.style = "--scale-height:" + s + "%;", b["data-scale-height"] = s), g("div", b, u)
                }
            }
        }), f("zibllblock/feature", {
            title: "Zibll:亮点",
            icon: O.feature,
            description: "包含图标和简介的亮点介绍，建议4个一组",
            category: "zibll_block_cat",
            attributes: {
                title: {
                    type: "array",
                    source: "children",
                    selector: ".feature-title"
                },
                icon: {
                    source: "attribute",
                    selector: ".feature",
                    attribute: "data-icon"
                },
                note: {
                    type: "array",
                    source: "children",
                    selector: ".feature-note"
                },
                theme: {
                    source: "attribute",
                    selector: ".feature",
                    attribute: "class"
                },
                color: {
                    source: "attribute",
                    selector: ".feature",
                    attribute: "data-color"
                }
            },
            edit: function (e) {
                function t(e) {
                    var t = e.target.className;
                    i({
                        color: t
                    })
                }
                var a = e.attributes,
                    o = e.isSelected,
                    i = e.setAttributes,
                    n = a.title,
                    c = a.note,
                    s = a.icon || "fa-flag",
                    r = a.color || "feature-icon no1";
                a.theme;
                let u = g(l.ColorPalette, {
                    value: r || "#444",
                    colors: $,
                    className: "q-ColorPalette",
                    onChange: function (e) {
                        i({
                            color: e
                        })
                    }
                });
                return rti = g(T, {
                    tagName: "div",
                    onChange: function (e) {
                        i({
                            icon: e
                        })
                    },
                    value: s,
                    placeholder: "请输入图标class代码..."
                }), rt = g(x, {
                    tagName: "div",
                    onChange: function (e) {
                        i({
                            title: e
                        })
                    },
                    value: n,
                    placeholder: "请输入亮点标题..."
                }), rtj = g(x, {
                    tagName: "div",
                    onChange: function (e) {
                        i({
                            note: e
                        })
                    },
                    value: c,
                    placeholder: "请输入亮点简介..."
                }), ztan = g("div", {
                    className: "g_extend anz panel_b"
                }, [g("button", {
                    className: "feature-icon no1",
                    onClick: t
                }), g("button", {
                    className: "feature-icon no2",
                    onClick: t
                }), g("button", {
                    className: "feature-icon no3",
                    onClick: t
                }), g("button", {
                    className: "feature-icon no4",
                    onClick: t
                }), g("button", {
                    className: "feature-icon no5",
                    onClick: t
                })]), g("div", {}, g("div", {
                    className: "feature"
                }, g("div", {
                    className: "feature-icon"
                }, g("i", {
                    style: {
                        color: r
                    },
                    className: "fa " + s
                })), [o && g("div", {
                    className: "feature-iconbj"
                }, g("div", {
                    className: "feature-icont"
                }, "请输入FA图标class代码："), rti)], [o && u], g("div", {
                    className: "feature-title"
                }, rt), g("div", {
                    className: "feature-note"
                }, rtj)), g(A, null, g("div", {
                    className: "modal-ss block-editor-block-card"
                }, g("div", {
                    className: "components-base-control"
                }, g("h5", {}, "图标使用说明"), g("p", {}, "图标使用Font Awesome图标库v4.7版本，你可以搜索Font Awesome或者在以下网站找到全部图标代码"), g("a", {
                    href: "http://fontawesome.dashgame.com",
                    target: "blank"
                }, "Font Awesome图标库"))), g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g("div", {
                    className: "components-base-control"
                }, g("div", {
                    className: "feature-icont"
                }, "FA图标class代码："), rti, g("div", {
                    className: "feature-icont"
                }, "选择图标颜色："), u))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.title,
                    l = t.note,
                    o = t.color || "feature-icon no1",
                    i = t.icon || "fa-flag",
                    n = t.theme || "feature feature-default";
                return g("div", {
                    className: n,
                    "data-icon": i,
                    "data-color": o
                }, g("div", {
                    className: "feature-icon"
                }, g("i", {
                    style: {
                        color: o
                    },
                    className: "fa " + i
                })), g("div", {
                    className: "feature-title"
                }, a), g("div", {
                    className: "feature-note"
                }, l))
            }
        }), n("zibllblock/set-color", {
            title: "设定颜色",
            tagName: "qc",
            className: null,
            attributes: {
                style: "style",
                block: "inline-block"
            },
            edit: class extends C {
                constructor() {
                    super(...arguments), this.show_modal = this.show_modal.bind(this), this.close_modal = this.close_modal.bind(this), this.words_selected = this.words_selected.bind(this), this.set_popover_rect = this.set_popover_rect.bind(this), this.remove_Format = this.remove_Format.bind(this), this.onChange_cb = this.onChange_cb.bind(this), this.set_color = this.set_color.bind(this), this.set_color2 = this.set_color2.bind(this), this.xsba = this.xsba.bind(this), this.xsba_f = this.xsba_f.bind(this), this.set_background = this.set_background.bind(this), this.set_background2 = this.set_background2.bind(this), this.state = {
                        modal_visibility: !1
                    }
                }
                words_selected() {
                    const {
                        value: e
                    } = this.props;
                    return e.start !== e.end
                }
                set_popover_rect() {
                    const e = window.getSelection(),
                        t = e.rangeCount > 0 ? e.getRangeAt(0) : null;
                    var a = _(t);
                    this.setState({
                        popover_rect: a
                    })
                }
                show_modal() {
                    this.setState({
                        modal_visibility: !0
                    }), this.set_popover_rect()
                }
                close_modal() {
                    this.setState({
                        modal_visibility: !1
                    })
                }
                xsba() {
                    this.setState({
                        xsba: !0
                    })
                }
                xsba_f() {
                    this.setState({
                        xsba: !1
                    })
                }
                remove_Format(e) {
                    this.setState({
                        color: "",
                        background: ""
                    }), this.props.onChange(wp.richText.toggleFormat(this.props.value, {
                        type: "zibllblock/set-color"
                    }))
                }
                onChange_cb() {
                    this.props.onChange(wp.richText.applyFormat(this.props.value, {
                        type: "zibllblock/set-color",
                        attributes: {
                            style: "color:" + this.state.color + ";background:" + this.state.background
                        }
                    }))
                }
                set_color(e) {
                    this.setState({
                        color: "rgba(" + e.rgb.r + "," + e.rgb.g + "," + e.rgb.b + "," + e.rgb.a + ")"
                    }), this.onChange_cb()
                }
                set_color2(e) {
                    this.setState({
                        color: e
                    }), this.props.onChange(wp.richText.applyFormat(this.props.value, {
                        type: "zibllblock/set-color",
                        attributes: {
                            style: "color:" + e + ";background:" + this.state.background
                        }
                    }))
                }
                set_background2(e) {
                    this.setState({
                        background: e
                    }), this.props.onChange(wp.richText.applyFormat(this.props.value, {
                        type: "zibllblock/set-color",
                        attributes: {
                            style: "color:" + this.state.color + ";background:" + e
                        }
                    }))
                }
                set_background(e) {
                    this.setState({
                        background: "rgba(" + e.rgb.r + "," + e.rgb.g + "," + e.rgb.b + "," + e.rgb.a + ")"
                    }), this.onChange_cb()
                }
                render() {
                    let {
                        isActive: e
                    } = this.props;
                    this.props;
                    let t = g(l.ColorPicker, {
                            color: this.state.color || "#444",
                            onChangeComplete: this.set_color
                        }),
                        a = g(l.ColorPalette, {
                            value: this.state.color || "#444",
                            colors: $,
                            clearable: !1,
                            className: "q-ColorPalette",
                            disableCustomColors: !0,
                            onChange: this.set_color2
                        }),
                        o = g(l.ColorPalette, {
                            value: this.state.background || "#fff",
                            colors: $,
                            clearable: !1,
                            className: "q-ColorPalette",
                            disableCustomColors: !0,
                            onChange: this.set_background2
                        }),
                        i = g(l.ColorPicker, {
                            color: this.state.background || "#fff",
                            onChangeComplete: this.set_background
                        }),
                        n = g("button", {
                            className: "remove-Format",
                            onClick: this.remove_Format
                        }, g("span", {
                            className: "dashicons dashicons-image-rotate"
                        }));
                    return g(S, null, g(N, {
                        icon: "art",
                        title: "自定义颜色",
                        onClick: this.show_modal,
                        isActive: e,
                        isDisabled: !this.words_selected()
                    }), this.state.modal_visibility && g(w, {
                        anchorRect: this.state.popover_rect,
                        position: "bottom center",
                        className: "color_popover",
                        onFocusOutside: this.close_modal
                    }, g(l.ButtonGroup, {}, g("button", {
                        className: "btn btn-default " + (!this.state.xsba && "isS"),
                        onClick: this.xsba_f
                    }, "颜色"), g("button", {
                        className: "btn btn-default " + (this.state.xsba && "isS"),
                        onClick: this.xsba
                    }, "背景色")), n, !this.state.xsba && g("div", {}, g("p", {}, "请选择文字颜色"), a, t), this.state.xsba && g("div", {}, g("p", {}, "请选择背景颜色"), o, i)))
                }
            }
        }), f("zibllblock/modal", {
            title: "Zibll:模态框",
            icon: {
                src: "feedback",
                foreground: U
            },
            description: "一个弹出框、模态框，默认不会显示，通过按钮让它弹出",
            category: "zibll_block_cat",
            attributes: {
                biaoti: {
                    type: "array",
                    source: "children",
                    selector: ".modal-title"
                },
                kuandu: {
                    type: "attribute",
                    selector: ".modal-dialog",
                    attribute: "data-kd"
                },
                btn1: {
                    type: "array",
                    source: "children",
                    selector: "button.btn1"
                },
                btn2: {
                    type: "array",
                    source: "children",
                    selector: "button.btn2"
                },
                id: {
                    source: "attribute",
                    selector: ".modal",
                    attribute: "id"
                },
                btn1kg: {
                    type: "attribute",
                    attribute: "data-bkg1",
                    default: !0
                },
                btn2kg: {
                    type: "attribute",
                    attribute: "data-bkg2",
                    default: !0
                },
                btntm1: {
                    type: "attribute",
                    selector: "button.btn1",
                    attribute: "class"
                },
                btntm2: {
                    type: "attribute",
                    selector: "button.btn2",
                    attribute: "class"
                },
                oncopy: {
                    source: "string"
                }
            },
            edit: function (e) {
                function t(e) {
                    var t = e.target.className;
                    p({
                        btntm1: "btn1 " + t
                    })
                }

                function a(e) {
                    var t = e.target.className;
                    p({
                        btntm2: "btn2 " + t
                    })
                }
                var l = e.attributes,
                    o = l.biaoti,
                    i = l.btn1,
                    n = l.btn2,
                    c = l.btntm1 || "btn1 but",
                    s = l.btntm2 || "btn2 but c-blue",
                    r = l.btn1kg,
                    u = l.btn2kg,
                    b = (e.isSelected, l.oncopy),
                    d = l.kuandu || "",
                    p = e.setAttributes,
                    m = parseInt((Math.random() + 1) * Math.pow(10, 4));
                console.log(e.clientId.substring(e.clientId.length - 8)), l.id || p({
                    id: "modal_" + m
                });
                var v = g(k, {}, ""),
                    h = g(x, {
                        tagName: "div",
                        onChange: function (e) {
                            p({
                                biaoti: e
                            })
                        },
                        value: o,
                        placeholder: "请输入标题..."
                    }),
                    f = g(x, {
                        tagName: "div",
                        onChange: function (e) {
                            p({
                                btn1: e
                            })
                        },
                        value: i,
                        placeholder: "按钮1"
                    }),
                    y = g(x, {
                        tagName: "div",
                        onChange: function (e) {
                            p({
                                btn2: e
                            })
                        },
                        value: n,
                        placeholder: "按钮2"
                    }),
                    N = g("span", {
                        className: "modal-bu"
                    }, [g("button", {
                        className: "but",
                        onClick: t
                    }), g("button", {
                        className: "but c-blue",
                        onClick: t
                    }), g("button", {
                        className: "but c-red",
                        onClick: t
                    }), g("button", {
                        className: "but c-yellow",
                        onClick: t
                    }), g("button", {
                        className: "but c-green",
                        onClick: t
                    }), g("button", {
                        className: "but c-purple",
                        onClick: t
                    }), g("button", {
                        className: "but b-blue",
                        onClick: t
                    }), g("button", {
                        className: "but b-red",
                        onClick: t
                    }), g("button", {
                        className: "but b-yellow",
                        onClick: t
                    }), g("button", {
                        className: "but b-green",
                        onClick: t
                    }), g("button", {
                        className: "but b-purple",
                        onClick: t
                    })]),
                    C = g("span", {
                        className: "modal-bu"
                    }, [g("button", {
                        className: "but",
                        onClick: a
                    }), g("button", {
                        className: "but c-blue",
                        onClick: a
                    }), g("button", {
                        className: "but c-red",
                        onClick: a
                    }), g("button", {
                        className: "but c-yellow",
                        onClick: a
                    }), g("button", {
                        className: "but c-green",
                        onClick: a
                    }), g("button", {
                        className: "but c-purple",
                        onClick: a
                    }), g("button", {
                        className: "but b-blue",
                        onClick: a
                    }), g("button", {
                        className: "but b-red",
                        onClick: a
                    }), g("button", {
                        className: "but b-yellow",
                        onClick: a
                    }), g("button", {
                        className: "but b-green",
                        onClick: a
                    }), g("button", {
                        className: "but b-purple",
                        onClick: a
                    })]);
                return g("div", {}, g("div", {
                    className: "modal " + d
                }, g("div", {
                    className: "modal-title"
                }, h, g("button", {
                    className: "close"
                }, "×")), g("div", {
                    className: "modal-body"
                }, v), [(r || u) && g("div", {
                    className: "modal-footer"
                }, [r && g("span", {
                    className: c
                }, f)], [u && g("span", {
                    className: s
                }, y)])]), g(A, {}, g("div", {
                    className: "modal-ss padding-h"
                }, g("h5", {}, "使用教程"), g("p", {}, "模态框在页面中默认不会显示，需要一个触发按钮，将以下代码复制后填入任意链接的url中即可触发此模态框的弹出"), g("p", {
                    className: "modal-code"
                }, "javascript:void($('#" + l.id + "').modal('show'));"), g("div", {
                    className: "Copy"
                }, g(B, {
                    text: "javascript:void($('#" + l.id + "').modal('show'));",
                    className: "Copy but jb-blue",
                    onCopy: function (e) {
                        p({
                            oncopy: !0
                        })
                    },
                    onFinishCopy: function (e) {
                        p({
                            oncopy: !1
                        })
                    }
                }, b ? "代码已复制" : "点击复制代码"))), g(M, {
                    title: "模态框设置"
                }, g(H, {
                    label: "宽度选择",
                    value: d,
                    onChange: function (e) {
                        p({
                            kuandu: e
                        })
                    },
                    options: [{
                        label: "默认中等宽度",
                        value: ""
                    }, {
                        label: "超小宽度",
                        value: "modal-sm"
                    }, {
                        label: "小型宽度",
                        value: "modal-mini"
                    }, {
                        label: "更大宽度",
                        value: "modal-lg"
                    }]
                }), g("p", {}, " "), g(L, {
                    label: "开启按钮1",
                    checked: r,
                    onChange: function (e) {
                        p({
                            btn1kg: e
                        })
                    }
                }), [r && N], g(L, {
                    label: "开启按钮2",
                    checked: u,
                    onChange: function (e) {
                        p({
                            btn2kg: e
                        })
                    }
                }), [u && C])))
            },
            save: function (e) {
                k.Content;
                var t = e.attributes,
                    a = t.btn1,
                    l = t.btn2,
                    o = t.btntm1 || "btn1 but",
                    i = t.btntm2 || "btn2 but c-blue",
                    n = t.btn1kg,
                    c = t.btn2kg,
                    s = t.kuandu,
                    r = t.id,
                    u = t.biaoti;
                return bth = g("div", {
                    className: "modal-header"
                }, g("strong", {
                    className: "modal-title"
                }, u), g("button", {
                    className: "close",
                    "data-dismiss": "modal"
                }, g("div", {
                    "data-class": "ic-close",
                    "data-svg": "close",
                    "data-viewbox": "0 0 1024 1024"
                }, ""))), coh = g("div", {
                    className: "modal-body"
                }, g(k.Content)), foo = [(n && a || c && l) && g("div", {
                    className: "modal-footer"
                }, [n && a && g("button", {
                    className: o
                }, a)], [c && l && g("button", {
                    className: i
                }, l)])], g("div", {}, g("div", {
                    className: "modal fade",
                    id: r,
                    "aria-hidden": "true",
                    "data-bkg1": n,
                    "aria-bkg2": c,
                    role: "dialog",
                    tabindex: "-1"
                }, g("div", {
                    className: "modal-dialog " + s,
                    "data-kd": s
                }, g("div", {
                    className: "modal-content"
                }, bth, coh, foo))))
            }
        }), f("zibllblock/collapse", {
            title: "Zibll:折叠框",
            icon: {
                src: "sort",
                foreground: U
            },
            description: "手风琴折叠框，可以插入任意内容，点击标题可切换内容显示和隐藏",
            category: "zibll_block_cat",
            attributes: {
                biaoti: {
                    type: "array",
                    source: "children",
                    selector: ".biaoti"
                },
                isshow: {
                    type: "attribute",
                    selector: ".panel",
                    attribute: "data-isshow",
                    default: !0
                },
                theme: {
                    source: "attribute",
                    selector: ".panel",
                    attribute: "class"
                },
                id: {
                    source: "attribute",
                    selector: ".collapse",
                    attribute: "id"
                },
                ffs: {
                    source: "string"
                }
            },
            edit: function (e) {
                function t(e) {
                    s("ffshow" == c ? {
                        ffs: "ffhide"
                    } : {
                        ffs: "ffshow"
                    })
                }

                function a(e) {
                    var t = e.target.className;
                    s({
                        theme: "panel " + t
                    })
                }
                var l = e.attributes,
                    o = l.biaoti,
                    i = l.theme || "panel panel-default",
                    n = l.isshow,
                    c = (e.isSelected, l.ffs || "ffshow"),
                    s = e.setAttributes,
                    r = parseInt((Math.random() + 1) * Math.pow(10, 4));
                l.id || s({
                    id: "collapse_" + r
                });
                var u = g(k, {}, ""),
                    b = g(x, {
                        tagName: "div",
                        onChange: function (e) {
                            s({
                                biaoti: e
                            })
                        },
                        value: o,
                        isSelected: e.isSelected,
                        placeholder: "请输入折叠框标题..."
                    });
                g("span", {
                    className: "g_extend anz panel_b"
                }, [g("button", {
                    className: "panel-default",
                    onClick: a
                }), g("button", {
                    className: "panel-info",
                    onClick: a
                }), g("button", {
                    className: "panel-success",
                    onClick: a
                }), g("button", {
                    className: "panel-warning",
                    onClick: a
                }), g("button", {
                    className: "panel-danger",
                    onClick: a
                })]);
                return g("div", {}, g("div", {
                    className: i
                }, g("div", {
                    className: "panel-heading"
                }, b), g("span", {
                    className: c + " isshow dashicons dashicons-arrow-down-alt2",
                    onClick: t
                }), g("div", {
                    className: c + " panel-body"
                }, u)), g(A, null, g(M, {
                    icon: "admin-generic",
                    title: "设置"
                }, g("p", {}, g(L, {
                    label: "默认展开",
                    checked: n,
                    onChange: function (e) {
                        s({
                            isshow: e
                        })
                    }
                })), g("i", {
                    className: ".components-base-control__help"
                }, n ? "默认为展开状态" : "默认为折叠状态"))))
            },
            save: function (e) {
                k.Content;
                var t = e.attributes,
                    a = t.theme || "panel",
                    l = t.isshow,
                    o = t.id,
                    i = t.biaoti;
                return bth = g("div", {
                    className: "panel-heading " + (l ? "" : "collapsed"),
                    href: "#" + o,
                    "data-toggle": "collapse",
                    "aria-controls": "collapseExample"
                }, g("i", {
                    className: "fa fa-plus"
                }), g("strong", {
                    className: "biaoti "
                }, i)), coh = g("div", {
                    className: "collapse " + (l ? "in" : ""),
                    id: o
                }, g("div", {
                    className: "panel-body"
                }, g(k.Content))), g("div", {}, g("div", {
                    className: a,
                    "data-theme": a,
                    "data-isshow": l
                }, bth, coh))
            }
        }), f("zibllblock/enlighter", {
            title: "Zibll:高亮代码",
            icon: O.enlighter,
            category: "zibll_block_cat",
            description: "输入代码，将自动高亮显示",
            keywords: ["code", "sourcecode", "代码"],
            attributes: {
                content: {
                    type: "string",
                    selector: "code.gl",
                    source: "text"
                },
                c_language: {
                    type: "attribute",
                    attribute: "data-enlighter-language",
                    default: "generic"
                },
                theme: {
                    type: "attribute",
                    attribute: "data-enlighter-theme",
                    default: ""
                },
                highlight: {
                    type: "attribute",
                    attribute: "data-enlighter-highlight",
                    default: ""
                },
                linenumbers: {
                    type: "attribute",
                    attribute: "data-enlighter-linenumbers",
                    default: ""
                },
                lineoffset: {
                    type: "attribute",
                    attribute: "data-enlighter-lineoffset",
                    default: ""
                },
                title: {
                    type: "attribute",
                    attribute: "data-enlighter-title",
                    default: ""
                },
                group: {
                    type: "attribute",
                    attribute: "data-enlighter-group",
                    default: ""
                }
            },
            transforms: {
                from: [{
                    type: "raw",
                    priority: 4,
                    isMatch: function (e) {
                        return "PRE" === e.nodeName && 1 === e.children.length && "CODE" === e.firstChild.nodeName
                    },
                    transform: function (e) {
                        return y("zibllblock/enlighter", {
                            content: e.textContent
                        })
                    }
                }, {
                    type: "raw",
                    priority: 4,
                    isMatch: function (e) {
                        return "PRE" === e.nodeName && "EnlighterJSRAW" === e.className
                    },
                    transform: function (e) {
                        return y("zibllblock/enlighter", {
                            content: e.textContent,
                            language: e.dataset.enlighterLanguage || "",
                            theme: e.dataset.enlighterTheme || "",
                            highlight: e.dataset.enlighterHighlight || "",
                            linenumbers: e.dataset.enlighterLinenumbers || "",
                            lineoffset: e.dataset.enlighterLineoffset || "",
                            title: e.dataset.enlighterTitle || "",
                            group: e.dataset.enlighterGroup || ""
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/code", "core/preformatted", "core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/enlighter", {
                            content: t
                        })
                    }
                }],
                to: [{
                    type: "block",
                    blocks: ["core/code"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/code", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/preformatted"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/preformatted", {
                            content: t
                        })
                    }
                }]
            },
            edit: function (e) {
                e.attributes.content, e.attributes.typeClass, e.isSelected;
                var t = e.attributes,
                    a = e.setAttributes,
                    l = g(V, null, g(R, {
                        className: "enlighter-dropdownmenu",
                        icon: "editor-paste-text",
                        label: "设置代码语言",
                        controls: [{
                            title: "yaml",
                            value: "yaml",
                            onClick: function () {
                                return a({
                                    c_language: "yaml"
                                })
                            }
                        }, {
                            title: "xml/html",
                            value: "xml",
                            onClick: function () {
                                return a({
                                    c_language: "xml"
                                })
                            }
                        }, {
                            title: "visualbasic",
                            value: "visualbasic",
                            onClick: function () {
                                return a({
                                    c_language: "visualbasic"
                                })
                            }
                        }, {
                            title: "vhdl",
                            value: "vhdl",
                            onClick: function () {
                                return a({
                                    c_language: "vhdl"
                                })
                            }
                        }, {
                            title: "typescript",
                            value: "typescript",
                            onClick: function () {
                                return a({
                                    c_language: "typescript"
                                })
                            }
                        }, {
                            title: "swift",
                            value: "swift",
                            onClick: function () {
                                return a({
                                    c_language: "swift"
                                })
                            }
                        }, {
                            title: "squirrel",
                            value: "squirrel",
                            onClick: function () {
                                return a({
                                    c_language: "squirrel"
                                })
                            }
                        }, {
                            title: "sql",
                            value: "sql",
                            onClick: function () {
                                return a({
                                    c_language: "sql"
                                })
                            }
                        }, {
                            title: "shell",
                            value: "shell",
                            onClick: function () {
                                return a({
                                    c_language: "shell"
                                })
                            }
                        }, {
                            title: "scss/sass",
                            value: "scss",
                            onClick: function () {
                                return a({
                                    c_language: "scss"
                                })
                            }
                        }, {
                            title: "rust",
                            value: "rust",
                            onClick: function () {
                                return a({
                                    c_language: "rust"
                                })
                            }
                        }, {
                            title: "ruby",
                            value: "ruby",
                            onClick: function () {
                                return a({
                                    c_language: "ruby"
                                })
                            }
                        }, {
                            title: "raw",
                            value: "raw",
                            onClick: function () {
                                return a({
                                    c_language: "raw"
                                })
                            }
                        }, {
                            title: "python",
                            value: "python",
                            onClick: function () {
                                return a({
                                    c_language: "python"
                                })
                            }
                        }, {
                            title: "prolog",
                            value: "prolog",
                            onClick: function () {
                                return a({
                                    c_language: "prolog"
                                })
                            }
                        }, {
                            title: "powershell",
                            value: "powershell",
                            onClick: function () {
                                return a({
                                    c_language: "powershell"
                                })
                            }
                        }, {
                            title: "php",
                            value: "php",
                            onClick: function () {
                                return a({
                                    c_language: "php"
                                })
                            }
                        }, {
                            title: "nsis",
                            value: "nsis",
                            onClick: function () {
                                return a({
                                    c_language: "nsis"
                                })
                            }
                        }, {
                            title: "matlab",
                            value: "matlab",
                            onClick: function () {
                                return a({
                                    c_language: "matlab"
                                })
                            }
                        }, {
                            title: "markdown",
                            value: "markdown",
                            onClick: function () {
                                return a({
                                    c_language: "markdown"
                                })
                            }
                        }, {
                            title: "lua",
                            value: "lua",
                            onClick: function () {
                                return a({
                                    c_language: "lua"
                                })
                            }
                        }, {
                            title: "less",
                            value: "less",
                            onClick: function () {
                                return a({
                                    c_language: "less"
                                })
                            }
                        }, {
                            title: "kotlin",
                            value: "kotlin",
                            onClick: function () {
                                return a({
                                    c_language: "kotlin"
                                })
                            }
                        }, {
                            title: "json",
                            value: "json",
                            onClick: function () {
                                return a({
                                    c_language: "json"
                                })
                            }
                        }, {
                            title: "javascript",
                            value: "javascript",
                            onClick: function () {
                                return a({
                                    c_language: "javascript"
                                })
                            }
                        }, {
                            title: "java",
                            value: "java",
                            onClick: function () {
                                return a({
                                    c_language: "java"
                                })
                            }
                        }, {
                            title: "ini/conf",
                            value: "ini",
                            onClick: function () {
                                return a({
                                    c_language: "ini"
                                })
                            }
                        }, {
                            title: "groovy",
                            value: "groovy",
                            onClick: function () {
                                return a({
                                    c_language: "groovy"
                                })
                            }
                        }, {
                            title: "go/golang",
                            value: "go",
                            onClick: function () {
                                return a({
                                    c_language: "go"
                                })
                            }
                        }, {
                            title: "docker",
                            value: "dockerfile",
                            onClick: function () {
                                return a({
                                    c_language: "dockerfile"
                                })
                            }
                        }, {
                            title: "diff",
                            value: "diff",
                            onClick: function () {
                                return a({
                                    c_language: "diff"
                                })
                            }
                        }, {
                            title: "cordpro",
                            value: "cordpro",
                            onClick: function () {
                                return a({
                                    c_language: "cordpro"
                                })
                            }
                        }, {
                            title: "cython",
                            value: "cython",
                            onClick: function () {
                                return a({
                                    c_language: "cython"
                                })
                            }
                        }, {
                            title: "css",
                            value: "css",
                            onClick: function () {
                                return a({
                                    c_language: "css"
                                })
                            }
                        }, {
                            title: "csharp",
                            value: "csharp",
                            onClick: function () {
                                return a({
                                    c_language: "csharp"
                                })
                            }
                        }, {
                            title: "Cpp/C++/C",
                            value: "cpp",
                            onClick: function () {
                                return a({
                                    c_language: "cpp"
                                })
                            }
                        }, {
                            title: "avrassembly",
                            value: "avrassembly",
                            onClick: function () {
                                return a({
                                    c_language: "avrassembly"
                                })
                            }
                        }, {
                            title: "assembly",
                            value: "assembly",
                            onClick: function () {
                                return a({
                                    c_language: "assembly"
                                })
                            }
                        }, {
                            title: "自动识别",
                            value: "generic",
                            onClick: function () {
                                return a({
                                    c_language: "generic"
                                })
                            }
                        }]
                    })),
                    o = g(q, {
                        value: t.content,
                        onChange: function (e) {
                            return a({
                                content: e
                            })
                        },
                        placeholder: "请输入代码...",
                        "aria-label": "Code"
                    });
                return ss = g(H, {
                    label: "代码语言",
                    value: t.c_language,
                    options: [{
                        label: "yaml",
                        value: "yaml"
                    }, {
                        label: "xml/html",
                        value: "xml"
                    }, {
                        label: "visualbasic",
                        value: "visualbasic"
                    }, {
                        label: "vhdl",
                        value: "vhdl"
                    }, {
                        label: "typescript",
                        value: "typescript"
                    }, {
                        label: "swift",
                        value: "swift"
                    }, {
                        label: "squirrel",
                        value: "squirrel"
                    }, {
                        label: "sql",
                        value: "sql"
                    }, {
                        label: "shell",
                        value: "shell"
                    }, {
                        label: "scss/sass",
                        value: "scss"
                    }, {
                        label: "rust",
                        value: "rust"
                    }, {
                        label: "ruby",
                        value: "ruby"
                    }, {
                        label: "raw",
                        value: "raw"
                    }, {
                        label: "python",
                        value: "python"
                    }, {
                        label: "prolog",
                        value: "prolog"
                    }, {
                        label: "powershell",
                        value: "powershell"
                    }, {
                        label: "php",
                        value: "php"
                    }, {
                        label: "nsis",
                        value: "nsis"
                    }, {
                        label: "matlab",
                        value: "matlab"
                    }, {
                        label: "markdown",
                        value: "markdown"
                    }, {
                        label: "lua",
                        value: "lua"
                    }, {
                        label: "less",
                        value: "less"
                    }, {
                        label: "kotlin",
                        value: "kotlin"
                    }, {
                        label: "json",
                        value: "json"
                    }, {
                        label: "javascript",
                        value: "javascript"
                    }, {
                        label: "java",
                        value: "java"
                    }, {
                        label: "ini/conf",
                        value: "ini"
                    }, {
                        label: "groovy",
                        value: "groovy"
                    }, {
                        label: "go/golang",
                        value: "go"
                    }, {
                        label: "docker",
                        value: "dockerfile"
                    }, {
                        label: "diff",
                        value: "diff"
                    }, {
                        label: "cordpro",
                        value: "cordpro"
                    }, {
                        label: "cython",
                        value: "cython"
                    }, {
                        label: "css",
                        value: "css"
                    }, {
                        label: "csharp",
                        value: "csharp"
                    }, {
                        label: "Cpp/C++/C",
                        value: "cpp"
                    }, {
                        label: "avrassembly",
                        value: "avrassembly"
                    }, {
                        label: "assembly",
                        value: "assembly"
                    }, {
                        label: "自动识别",
                        value: "generic"
                    }],
                    onChange: function (e) {
                        return a({
                            c_language: e
                        })
                    }
                }), sz = g(A, null, g(M, {
                    icon: "admin-appearance",
                    title: "代码设置"
                }, ss, g(H, {
                    label: "选择主题",
                    value: t.theme,
                    options: [{
                        label: "enlighter",
                        value: "enlighter"
                    }, {
                        label: "classic",
                        value: "classic"
                    }, {
                        label: "beyond",
                        value: "beyond"
                    }, {
                        label: "mowtwo",
                        value: "mowtwo"
                    }, {
                        label: "eclipse",
                        value: "eclipse"
                    }, {
                        label: "droide",
                        value: "droide"
                    }, {
                        label: "minimal",
                        value: "minimal"
                    }, {
                        label: "atomic",
                        value: "atomic"
                    }, {
                        label: "dracula",
                        value: "dracula"
                    }, {
                        label: "bootstrap4",
                        value: "bootstrap4"
                    }, {
                        label: "rowhammer",
                        value: "rowhammer"
                    }, {
                        label: "godzilla",
                        value: "godzilla"
                    }, {
                        label: "跟随主题设置",
                        value: ""
                    }],
                    onChange: function (e) {
                        return a({
                            theme: e
                        })
                    }
                }), g(F, {
                    label: "显示行号",
                    selected: t.linenumbers,
                    options: [{
                        label: "跟随主题设置",
                        value: ""
                    }, {
                        label: "显示",
                        value: "true"
                    }, {
                        label: "隐藏",
                        value: "false"
                    }],
                    onChange: function (e) {
                        return a({
                            linenumbers: e
                        })
                    }
                }), g(T, {
                    label: "起始行号",
                    value: t.lineoffset,
                    onChange: function (e) {
                        return a({
                            lineoffset: e
                        })
                    },
                    placeholder: "输入行号。例：12"
                }), g(T, {
                    label: "高亮行号",
                    value: t.highlight,
                    onChange: function (e) {
                        return a({
                            highlight: e
                        })
                    },
                    placeholder: "格式：1,2,20-22"
                })), g(M, {
                    title: "代码组",
                    initialOpen: !1,
                    icon: "excerpt-view"
                }, g("p", null, "如果需要加入代码组，请填写下面设置，相同组ID的代码将合并为代码组显示"), g(T, {
                    label: "代码标题",
                    value: t.title,
                    onChange: function (e) {
                        return a({
                            title: e
                        })
                    },
                    placeholder: "加入组之后显示的标题"
                }), g(T, {
                    label: "自定义组id",
                    value: t.group,
                    onChange: function (e) {
                        return a({
                            group: e
                        })
                    },
                    placeholder: "自定义组的id"
                }))), g("div", null, g(S, null, g(P, null, l)), g("div", {
                    className: "enlighter-block-wrapper"
                }, g("div", {
                    className: "enlighter-header"
                }, g("div", {
                    className: "enlighter-title"
                })), g("pre", {
                    tagName: "pre",
                    className: "enlighter-pre"
                }, g("div", {
                    className: "enlighter-label"
                }, "语言：", t.c_language, " · 主题：", t.theme ? t.theme : "跟随主题"), o), g("div", {
                    className: "enlighter-footer"
                }), sz))
            },
            save: function (e) {
                var t = e.attributes,
                    a = g("code", {
                        className: "gl",
                        "data-enlighter-language": t.c_language,
                        "data-enlighter-theme": t.theme,
                        "data-enlighter-highlight": t.highlight,
                        "data-enlighter-linenumbers": t.linenumbers,
                        "data-enlighter-lineoffset": t.lineoffset,
                        "data-enlighter-title": t.title,
                        "data-enlighter-group": t.group
                    }, t.content);
                return g("pre", {}, a)
            }
        }), f("zibllblock/biaoti", {
            title: "Zibll:标题",
            icon: O.biaoti,
            category: "zibll_block_cat",
            description: "和主题样式匹配的文章标题，可自定义颜色",
            className: !1,
            attributes: {
                content: {
                    type: "array",
                    source: "children",
                    selector: "h1"
                },
                typeClass: {
                    source: "attribute",
                    selector: ".title-theme",
                    attribute: "class"
                },
                color: {
                    source: "attribute",
                    selector: "h1",
                    attribute: "data-color"
                }
            },
            transforms: {
                from: [{
                    type: "block",
                    blocks: ["core/heading", "core/preformatted", "core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/biaoti", {
                            content: t
                        })
                    }
                }],
                to: [{
                    type: "block",
                    blocks: ["core/heading"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/heading", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/paragraph", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/preformatted"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/preformatted", {
                            content: t
                        })
                    }
                }]
            },
            edit: function (e) {
                function t(t) {
                    e.setAttributes({
                        content: t
                    })
                }

                function a(t) {
                    var a = t.target.className;
                    e.setAttributes({
                        typeClass: "title-theme " + a
                    })
                }

                function o(t) {
                    e.setAttributes({
                        color: t
                    })
                }
                var i = e.attributes.content,
                    n = i.typeClass || "title-theme";
                e.isSelected;
                color = e.attributes.color, sty = color && "--theme-color:" + color;
                var c = g(x, {
                        tagName: "div",
                        onChange: t,
                        value: i,
                        isSelected: e.isSelected,
                        placeholder: "请输入标题..."
                    }),
                    s = g("div", {
                        className: n,
                        "data-color": color,
                        style: {
                            color: color,
                            "border-left-color": color
                        }
                    }, g("h1", {}, c)),
                    r = (g("div", {
                        className: "g_extend anz"
                    }, [g("button", {
                        className: "qe_bt_zts",
                        onClick: a
                    }, "主题色"), g("button", {
                        className: "qe_bt_lan",
                        onClick: a
                    }, "蓝色"), g("button", {
                        className: "qe_bt_hui",
                        onClick: a
                    }, "灰色"), g("button", {
                        className: "qe_bt_c-red",
                        onClick: a
                    }, "红色")]), g(l.ColorPalette, {
                        value: color,
                        colors: $,
                        className: "q-ColorPalette",
                        onChange: o
                    }));
                return g("div", {}, s, g(A, null, g(M, {
                    title: "自定义颜色"
                }, g("p", {
                    className: "components-base-control"
                }, "默认颜色为主题高亮颜色，如需要自定义颜色，请在下方选择颜色"), g("p", {
                    className: "components-base-control"
                }, r))))
            },
            save: function (e) {
                var t = e.attributes.content,
                    a = e.attributes.typeClass || "title-theme",
                    l = e.attributes.color;
                sty = l && "--theme-color:" + l;
                var o = g("h1", {
                    "data-color": l,
                    className: a,
                    style: sty
                }, t);
                return o
            }
        }), f("zibllblock/hide-content", {
            title: "Zibll:隐藏内容",
            icon: {
                src: "hidden",
                foreground: U
            },
            description: "隐藏文章部分内容，多种隐藏可见模式(评论可见、付费阅读、登录可见、密码验证、会员可见)",
            category: "zibll_block_cat",
            attributes: {
                type: {
                    source: "attribute",
                    selector: "div",
                    attribute: "data-type"
                },
                password: {
                    source: "attribute",
                    selector: "[data-password]",
                    attribute: "data-password",
                    default: ""
                },
                img_id: {
                    source: "attribute",
                    selector: "[data-img-id]",
                    attribute: "data-img-id",
                    default: ""
                },
                img_url: {
                    source: "attribute",
                    selector: "[data-img-url]",
                    attribute: "data-img-url",
                    default: ""
                },
                desc: {
                    source: "attribute",
                    selector: "[data-desc]",
                    attribute: "data-desc",
                    default: ""
                }
            },
            edit: function (e) {
                e.isSelected;
                var t = e.setAttributes,
                    a = e.attributes,
                    l = a.type || "reply",
                    o = g("div", {
                        className: "hide-innerblocks"
                    }, g(k)),
                    i = {
                        reply: "评论可见",
                        payshow: "付费阅读",
                        logged: "登录可见",
                        password: "密码验证",
                        vip1: "一级会员可见",
                        vip2: "二级会员可见"
                    },
                    n = g(V, {}, g(R, {
                        icon: "editor-paste-text",
                        className: "zibllblock-buttons-sl",
                        label: "隐藏模式选择",
                        controls: [{
                            title: i.reply,
                            value: "reply",
                            onClick: function (e) {
                                t({
                                    type: "reply"
                                })
                            }
                        }, {
                            title: i.logged,
                            value: "logged",
                            onClick: function (e) {
                                t({
                                    type: "logged"
                                })
                            }
                        }, {
                            title: i.password,
                            value: "password",
                            onClick: function (e) {
                                t({
                                    type: "password"
                                })
                            }
                        }, {
                            title: i.payshow,
                            value: "payshow",
                            onClick: function (e) {
                                t({
                                    type: "payshow"
                                })
                            }
                        }, {
                            title: i.vip1,
                            value: "vip1",
                            onClick: function (e) {
                                t({
                                    type: "vip1"
                                })
                            }
                        }, {
                            title: i.vip2,
                            value: "vip2",
                            onClick: function (e) {
                                t({
                                    type: "vip2"
                                })
                            }
                        }]
                    })),
                    c = g(S, null, g(P, null, n));
                return g("div", {
                    className: "hide-content"
                }, c, g("div", {
                    className: "hide-title"
                }, "【 隐藏内容 】- 【 " + i[l] + " 】", g("span", {
                    className: "dashicons dashicons-admin-generic",
                    style: {
                        float: "right",
                        margin: "5px 10px"
                    }
                })), o, g(A, null, J("https://www.zibll.com/853.html"), g(M, {
                    title: "隐藏内容设置"
                }, g(H, {
                    label: "隐藏可见模式",
                    value: l,
                    options: [{
                        label: i.reply,
                        value: "reply"
                    }, {
                        label: i.logged,
                        value: "logged"
                    }, {
                        label: i.password,
                        value: "password"
                    }, {
                        label: i.payshow,
                        value: "payshow"
                    }, {
                        label: i.vip1,
                        value: "vip1"
                    }, {
                        label: i.vip2,
                        value: "vip2"
                    }],
                    onChange: function (e) {
                        t({
                            type: e
                        })
                    }
                }), ["payshow" == l && g("div", {
                    className: "block-editor-block-card__description"
                }, "付费阅读：请配合底部 付费功能-付费阅读 功能使用")], ["password" == l && g("div", {
                    className: "block-editor-block-card__description"
                }, g(T, {
                    label: "设置密码",
                    value: a.password || "",
                    onChange: function (e) {
                        return t({
                            password: e
                        })
                    },
                    placeholder: "请输入密码..."
                }), g(T, {
                    label: "提醒文案",
                    value: a.desc || "",
                    onChange: function (e) {
                        return t({
                            desc: e
                        })
                    },
                    placeholder: "请输入提醒内容..."
                }), [a.img_id && g("div", {
                    className: " "
                }, g("img", {
                    src: a.img_url
                }))], g(j, {
                    title: "提醒图片",
                    allowedTypes: ["image"],
                    onSelect: function (e) {
                        t({
                            img_url: e.url,
                            img_id: e.id
                        })
                    },
                    value: a.img_id,
                    render: function (e) {
                        var t = e.open;
                        return g(z, {
                            className: "but jb-blue is-secondary",
                            onClick: t
                        }, [a.img_id ? "替换提醒图片" : "添加图片提醒"])
                    }
                }), g("div", {
                    className: "mt10 em09"
                }, "通过提醒文案和提醒图片设置，可实现引导用户关注微信公众号获取密码引流等功能。"), g("div", {
                    className: "mt6 em09"
                }, "注意：相同密码的块一篇文章只能添加一个，如需同一篇文章添加多个此模块，请设置不同密码"))])))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.type || "reply",
                    l = {},
                    o = "";
                return "password" == a && (l = {
                    "data-password": t.password,
                    "data-img-id": t.img_id,
                    "data-img-url": t.img_url,
                    "data-desc": t.desc
                }, o = ' password="' + t.password + '" img_id="' + t.img_id + '" img_url="' + t.img_url + '" desc="' + t.desc + '"'), g("div", {
                    "data-type": a
                }, [g("span", {}, '[hidecontent type="' + a + '"' + o + "]"), g(k.Content), g("span", l, "[/hidecontent]")])
            }
        }), f("zibllblock/postsbox", {
            title: "Zibll:文章",
            icon: O.postsbox,
            attributes: {
                post_id: {
                    source: "attribute",
                    selector: "div",
                    attribute: "data-pid"
                }
            },
            description: "显示一篇文章",
            category: "zibll_block_cat",
            edit: function (e) {
                function t(t) {
                    e.setAttributes({
                        post_id: t
                    })
                }
                e.isSelected;
                var a = e.attributes.post_id,
                    l = g(T, {
                        tagName: "div",
                        onChange: t,
                        value: a,
                        type: "number",
                        placeholder: "请输入文章ID",
                        label: "请输入文章ID"
                    });
                return g("div", {
                    className: "postsbox"
                }, g("div", {
                    className: "postsbox-doc"
                }, "显示一篇文章模块"), l, g(A, null, J("https://www.zibll.com/860.html")))
            },
            save: function (e) {
                var t = e.attributes.post_id;
                return g("div", {
                    "data-pid": t
                }, '[postsbox post_id="' + t + '"]')
            }
        }), f("zibllblock/quote", {
            title: "Zibll:引言",
            icon: {
                src: "format-quote",
                foreground: U
            },
            description: "几种不同的引言框",
            category: "zibll_block_cat",
            attributes: {
                content: {
                    type: "array",
                    source: "children",
                    selector: ".quote_q p"
                },
                typeClass: {
                    source: "attribute",
                    selector: ".quote_q",
                    attribute: "class"
                },
                color: {
                    source: "attribute",
                    selector: ".quote_q",
                    attribute: "data-color"
                }
            },
            transforms: {
                from: [{
                    type: "block",
                    blocks: ["zibllblock/alert", "core/quote", "core/preformatted", "core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/quote", {
                            content: t
                        })
                    }
                }],
                to: [{
                    type: "block",
                    blocks: ["core/quote"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/quote", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["zibllblock/alert"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/alert", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/paragraph", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/preformatted"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/preformatted", {
                            content: t
                        })
                    }
                }]
            },
            edit: function (e) {
                function t(t) {
                    e.setAttributes({
                        color: t
                    })
                }

                function a(t) {
                    e.setAttributes({
                        content: t
                    })
                }
                var o = e.attributes.content,
                    i = e.attributes.typeClass || "quote_q";
                e.isSelected;
                color = e.attributes.color, sty = color || "";
                var n = g(x, {
                        tagName: "div",
                        isSelected: e.isSelected,
                        onChange: a,
                        value: o,
                        placeholder: "请输入内容..."
                    }),
                    c = g("div", {
                        className: i,
                        style: {
                            "--quote-color": sty
                        }
                    }, g("i", {
                        className: "fa fa-quote-left"
                    }), n),
                    s = g(l.ColorPalette, {
                        value: color || "#555",
                        colors: $,
                        className: "q-ColorPalette",
                        onChange: t
                    });
                return g("div", {}, c, g("div", {}, g(A, null, g(M, {
                    title: "自定义颜色"
                }, g("p", {}, "默认为主题颜色，如果需自定义请在下方选择颜色（引言默认透明度为70%，请不要选择较浅的颜色，并请注意深色主题的显示效果）"), g("p", {}, s)))))
            },
            save: function (e) {
                var t = e.attributes.content,
                    a = e.attributes.typeClass || "quote_q";
                color = e.attributes.color, sty = color && "--quote-color:" + color;
                var l = g("div", {
                    className: a,
                    "data-color": color,
                    style: sty
                }, g("i", {
                    className: "fa fa-quote-left"
                }), g("p", {}, t));
                return g("div", {}, l)
            }
        }), f("zibllblock/alert", {
            title: "Zibll:提醒框",
            icon: {
                src: "info",
                foreground: U
            },
            description: "几种不同的提醒框，可选择关闭按钮",
            category: "zibll_block_cat",
            attributes: {
                content: {
                    type: "array",
                    source: "children",
                    selector: "div.alert"
                },
                typeClass: {
                    source: "attribute",
                    selector: ".alert",
                    attribute: "class"
                },
                isChecked: {
                    source: "attribute",
                    selector: ".alert",
                    attribute: "data-isclose"
                }
            },
            transforms: {
                from: [{
                    type: "block",
                    blocks: ["zibllblock/quote", "core/quote", "core/preformatted", "core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/alert", {
                            content: t
                        })
                    }
                }],
                to: [{
                    type: "block",
                    blocks: ["core/quote"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/quote", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["zibllblock/quote"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/quote", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/paragraph", {
                            content: t
                        })
                    }
                }, {
                    type: "block",
                    blocks: ["core/preformatted"],
                    transform: function (e) {
                        var t = e.content;
                        return y("core/preformatted", {
                            content: t
                        })
                    }
                }]
            },
            edit: function (e) {
                function t(t) {
                    e.setAttributes({
                        content: t
                    })
                }

                function a(t) {
                    e.setAttributes({
                        isChecked: t
                    })
                }

                function l(t) {
                    var a = t.target.className;
                    e.setAttributes({
                        typeClass: "alert " + a
                    })
                }
                var o = e.attributes.content,
                    i = e.attributes.typeClass || "alert jb-blue",
                    n = e.attributes.isChecked,
                    c = e.isSelected,
                    s = g(x, {
                        tagName: "div",
                        isSelected: e.isSelected,
                        onChange: t,
                        value: o,
                        placeholder: "请输入内容..."
                    }),
                    r = g("div", {
                        className: i
                    }, s),
                    u = g("span", {
                        className: "g_extend anz alert_b"
                    }, [g("button", {
                        className: "jb-blue",
                        onClick: l
                    }), g("button", {
                        className: "jb-green",
                        onClick: l
                    }), g("button", {
                        className: "jb-yellow",
                        onClick: l
                    }), g("button", {
                        className: "jb-red",
                        onClick: l
                    })]),
                    b = g("div", {
                        className: "close_an"
                    }, g(L, {
                        label: "提醒框可关闭",
                        checked: n,
                        onChange: a
                    }));
                return g("div", {}, [r, n && g("button", {
                    className: "close"
                }, "×"), c && u, c && b], g(A, null, g(M, {
                    icon: "admin-appearance",
                    title: "提醒框设置"
                }, g("div", {}, "提醒框类型"), g("div", {}, u)), b))
            },
            save: function (e) {
                var t = e.attributes.content,
                    a = e.attributes.isChecked || "",
                    l = e.attributes.typeClass || "alert jb-blue",
                    o = g("button", {
                        type: "button",
                        className: "close",
                        "data-dismiss": "alert",
                        "aria-label": "Close"
                    }, g("div", {
                        "data-class": "ic-close",
                        "data-svg": "close",
                        "data-viewbox": "0 0 1024 1024"
                    })),
                    i = g("div", {
                        className: l,
                        "data-isclose": a,
                        role: "alert"
                    }, t);
                return g("div", {
                    className: "alert-dismissible fade in"
                }, [a && o], i)
            }
        }), f("zibllblock/buttons", {
            title: "Zibll:按钮组",
            description: "多种样式的按钮",
            icon: O.buttons,
            category: "zibll_block_cat",
            attributes: {
                alignment: {
                    type: "string"
                },
                quantity: {
                    type: "attribute",
                    attribute: "data-quantity",
                    default: 1
                },
                radius: {
                    type: "attribute",
                    attribute: "data-radius",
                    default: !0
                },
                content1: {
                    type: "array",
                    source: "children",
                    selector: "span.an_1"
                },
                typeClass1: {
                    source: "attribute",
                    selector: ".an_1",
                    attribute: "class"
                },
                content2: {
                    type: "array",
                    source: "children",
                    selector: "span.an_2"
                },
                typeClass2: {
                    source: "attribute",
                    selector: ".an_2",
                    attribute: "class"
                },
                content3: {
                    type: "array",
                    source: "children",
                    selector: "span.an_3"
                },
                typeClass3: {
                    source: "attribute",
                    selector: ".an_3",
                    attribute: "class"
                },
                content4: {
                    type: "array",
                    source: "children",
                    selector: "span.an_4"
                },
                typeClass4: {
                    source: "attribute",
                    selector: ".an_4",
                    attribute: "class"
                },
                content5: {
                    type: "array",
                    source: "children",
                    selector: "span.an_5"
                },
                typeClass5: {
                    source: "attribute",
                    selector: ".an_5",
                    attribute: "class"
                }
            },
            transforms: {
                from: [{
                    type: "block",
                    blocks: ["core/paragraph"],
                    transform: function (e) {
                        var t = e.content;
                        return y("zibllblock/buttons", {
                            content1: t
                        })
                    }
                }],
                to: [{
                    type: "block",
                    blocks: ["core/paragraph"],
                    transform: function (e) {
                        var t = e.content1;
                        return y("core/paragraph", {
                            content: t
                        })
                    }
                }]
            },
            edit: function (t) {
                var a = t.attributes,
                    l = t.setAttributes,
                    o = a.alignment,
                    i = t.isSelected,
                    n = a.quantity,
                    c = a.radius,
                    s = [];
                for (let o = 0; o <= 5; o++) s["c" + o] = a["content" + o], s["cs" + o] = a["typeClass" + o] || "but b-blue", s["rt" + o] = g(x, {
                    tagName: "div",
                    onChange: function (e) {
                        l({
                            ["content" + o]: e
                        })
                    },
                    value: s["c" + o],
                    isSelected: t.isS,
                    placeholder: "按钮-" + o
                }), s["crt" + o] = g("div", {
                    className: s["cs" + o]
                }, s["rt" + o]), s["bk" + o] = g("button", {
                    className: "anz sz",
                    onClick: function (t) {
                        e(".anz.an.x" + o).slideToggle(200)
                    }
                }, g("span", {
                    className: "dashicons dashicons-admin-appearance"
                })), s["btt" + o] = g("div", {
                    className: "g_extend anz an x" + o
                }, g("button", {
                    className: "but b-red",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but b-yellow",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but b-blue",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but b-green",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but b-purple",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but hollow c-red",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but hollow c-yellow",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but hollow c-blue",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but hollow c-green",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but hollow c-purple",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but jb-red",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but jb-yellow",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but jb-blue",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but jb-green",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""), g("button", {
                    className: "but jb-purple",
                    onClick: function (e) {
                        l({
                            ["typeClass" + o]: "an_" + o + " " + e.target.className
                        })
                    }
                }, ""));
                var r = g(V, {}, g(R, {
                        icon: "plus-alt",
                        className: "zibllblock-buttons-sl",
                        label: "按钮数量",
                        controls: [{
                            title: "1个",
                            value: 1,
                            onClick: function (e) {
                                l({
                                    quantity: 1
                                })
                            }
                        }, {
                            title: "2个",
                            onClick: function (e) {
                                l({
                                    quantity: 2
                                })
                            }
                        }, {
                            title: "3个",
                            value: 3,
                            onClick: function (e) {
                                l({
                                    quantity: 3
                                })
                            }
                        }, {
                            title: "4个",
                            value: 4,
                            onClick: function (e) {
                                l({
                                    quantity: 4
                                })
                            }
                        }, {
                            title: "5个",
                            value: 5,
                            onClick: function (e) {
                                l({
                                    quantity: 5
                                })
                            }
                        }]
                    })),
                    u = g(S, null, g(P, null, r, g(I, {
                        value: o,
                        onChange: function (e) {
                            l({
                                alignment: e
                            })
                        }
                    })));
                return g("div", {
                    style: {
                        textAlign: o
                    },
                    className: "aniuzu " + (c && "radius")
                }, u, [s.crt1, i && s.bk1, i && s.btt1], [n >= 2 && [s.crt2, i && s.bk2, i && s.btt2]], [n >= 3 && [s.crt3, i && s.bk3, i && s.btt3]], [n >= 4 && [s.crt4, i && s.bk4, i && s.btt4]], [n >= 5 && [s.crt5, i && s.bk5, i && s.btt5]], g(A, null, g(M, {
                    icon: "admin-generic",
                    title: "按钮设置"
                }, g(Z, {
                    label: "按钮数量",
                    value: n,
                    onChange: function (e) {
                        l({
                            quantity: e
                        })
                    },
                    min: "1",
                    max: "5"
                }), g(L, {
                    className: "close_an",
                    label: "按钮圆角",
                    checked: c,
                    onChange: function (e) {
                        l({
                            radius: e
                        })
                    }
                }))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = (e.setAttributes, t.alignment),
                    l = (e.isSelected, t.quantity),
                    o = t.radius,
                    i = [];
                for (let e = 0; e <= 5; e++) i[e] = t["content" + e], i["s" + e] = t["typeClass" + e] || "an_" + e + " but b-blue", i["jg" + e] = g("span", {
                    className: i["s" + e]
                }, i[e]);
                return outerHtml = g("div", {
                    "data-quantity": l,
                    "data-radius": o,
                    style: {
                        textAlign: a
                    },
                    className: o && "radius"
                }, [l > 0 && i.jg1], [l > 1 && i.jg2], [l > 2 && i.jg3], [l > 3 && i.jg4], [l > 4 && i.jg5])
            }
        }), f("zibllblock/carousel", {
            title: "Zibll:幻灯片",
            description: "选择图片生成幻灯片",
            icon: {
                src: "images-alt2",
                foreground: U
            },
            category: "zibll_block_cat",
            attributes: {
                center: {
                    type: "string",
                    selector: "div",
                    source: "attribute",
                    attribute: "data-cen",
                    default: !0
                },
                interval: {
                    type: "string",
                    selector: ".carousel",
                    source: "attribute",
                    attribute: "data-interval",
                    default: 4e3
                },
                limitedwidth: {
                    type: "string",
                    selector: "div",
                    source: "attribute",
                    attribute: "data-liw",
                    default: !0
                },
                maxwidth: {
                    type: "string",
                    source: "attribute",
                    selector: "div",
                    attribute: "data-mw",
                    default: 600
                },
                effect: {
                    type: "string",
                    selector: ".carousel",
                    source: "attribute",
                    attribute: "data-effect",
                    default: ""
                },
                jyloop: {
                    type: "string",
                    selector: ".carousel",
                    source: "attribute",
                    attribute: "data-jyloop",
                    default: !0
                },
                id: {
                    type: "string",
                    selector: ".carousel",
                    source: "attribute",
                    attribute: "id"
                },
                proportion: {
                    type: "string",
                    selector: ".carousel",
                    source: "attribute",
                    attribute: "proportion",
                    default: "0.6"
                }
            },
            edit: function (e) {
                var t = e.attributes,
                    a = (e.isSelected, t.limitedwidth),
                    l = t.interval,
                    o = t.center,
                    i = t.maxwidth,
                    n = t.effect,
                    c = t.jyloop,
                    s = e.setAttributes,
                    r = (e.noticeUI, parseInt((Math.random() + 1) * Math.pow(10, 4)));
                t.id || s({
                    id: r
                });
                const u = [
                    ["core/gallery", {
                        linkTo: "none",
                        columns: "8"
                    }]
                ];
                var b = g(k, {
                        allowedBlocks: ["core/gallery"],
                        templateLock: "",
                        template: u
                    }, ""),
                    d = g(Z, {
                        label: "切换时间（秒）",
                        value: l / 1e3,
                        onChange: function (e) {
                            s({
                                interval: 1e3 * e
                            })
                        },
                        min: "1",
                        max: "20"
                    }),
                    p = g(L, {
                        label: "循环播放",
                        checked: c,
                        onChange: function (e) {
                            s({
                                jyloop: e
                            })
                        }
                    }),
                    m = g(L, {
                        label: "限制最大宽度",
                        checked: a,
                        onChange: function (e) {
                            s({
                                limitedwidth: e
                            })
                        }
                    }),
                    v = g(L, {
                        label: "居中显示",
                        checked: o,
                        onChange: function (e) {
                            s({
                                center: e
                            })
                        }
                    }),
                    h = g(Z, {
                        label: "最大宽度",
                        value: i,
                        onChange: function (e) {
                            s({
                                maxwidth: e
                            })
                        },
                        min: "200",
                        max: "1500"
                    }),
                    f = g(H, {
                        label: "切换动画",
                        value: n,
                        onChange: function (e) {
                            s({
                                effect: e
                            })
                        },
                        options: [{
                            label: "滑动",
                            value: ""
                        }, {
                            label: "淡出淡入",
                            value: "fade"
                        }, {
                            label: "3D方块",
                            value: "cube"
                        }, {
                            label: "3D滑入",
                            value: "coverflow"
                        }, {
                            label: "3D翻转",
                            value: "flip"
                        }]
                    });
                return g("div", {
                    className: "carousel iss"
                }, g("div", {
                    className: "leab"
                }, "Zibll:幻灯片", g("span", {
                    className: "dashicons dashicons-admin-generic"
                })), b, g(A, null, J("https://www.zibll.com/675.html"), g(M, {
                    title: "幻灯片设置"
                }, f, g(H, {
                    label: "保持长宽比例",
                    value: t.proportion,
                    options: [{
                        label: "禁用",
                        value: ""
                    }, {
                        label: "横版-3:1",
                        value: "0.333"
                    }, {
                        label: "横版-5:2",
                        value: "0.4"
                    }, {
                        label: "横版-2:1",
                        value: "0.5"
                    }, {
                        label: "横版-5:3",
                        value: "0.6"
                    }, {
                        label: "横版-4:3",
                        value: "0.75"
                    }, {
                        label: "横版-5:4",
                        value: "0.75"
                    }, {
                        label: "横版-8:7",
                        value: "0.875"
                    }, {
                        label: "正方形-1:1",
                        value: "1"
                    }, {
                        label: "竖版-7:8",
                        value: "1.142"
                    }, {
                        label: "竖版-4:5",
                        value: "1.25"
                    }, {
                        label: "竖版-3:4",
                        value: "1.333"
                    }, {
                        label: "竖版-3:5",
                        value: "1.666"
                    }, {
                        label: "竖版-1:2",
                        value: "2"
                    }, {
                        label: "竖版-2:5",
                        value: "2.5"
                    }, {
                        label: "竖版-1:3",
                        value: "3"
                    }],
                    onChange: function (e) {
                        s({
                            proportion: e
                        })
                    }
                }), d, p, m, a && [h, v], g("p", null, "如果幻灯片内的图片尺寸不一致，建议开启限制最大宽度，再结合长宽比例能显示更好的效果"))))
            },
            save: function (e) {
                var t = e.attributes,
                    a = t.limitedwidth ? "true" : "",
                    l = t.center ? "true" : "",
                    o = t.maxwidth,
                    i = t.interval,
                    n = t.effect,
                    c = t.jyloop ? "true" : "",
                    s = a && l ? "10px auto" : "",
                    r = a && o + "px" || "",
                    u = t.id,
                    b = g("div", {
                        className: "swiper-button-next"
                    }),
                    d = g("div", {
                        className: "swiper-button-prev"
                    }),
                    p = g("div", {
                        className: "swiper-pagination"
                    });
                return g("div", {
                    "data-mw": o,
                    "data-liw": a,
                    "data-cen": l,
                    className: "wp-block-carousel"
                }, g("div", {
                    className: "carousel slide",
                    "data-effect": n,
                    "data-jyloop": c,
                    "data-interval": i,
                    id: u,
                    proportion: t.proportion,
                    style: {
                        "max-width": r,
                        margin: s
                    }
                }, g(k.Content), b, d, p))
            }
        }), a.updateCategory("zibll_block_cat", {
            icon: O.zibll
        })
    })
})(jQuery);